function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e4) { throw _e4; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e5) { didErr = true; err = _e5; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }
function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _isNativeFunction(fn) { try { return Function.toString.call(fn).indexOf("[native code]") !== -1; } catch (e) { return typeof fn === "function"; } }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function e(e, r) {
  return function (e) {
    if (Array.isArray(e)) return e;
  }(e) || function (e, t) {
    var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (null != r) {
      var n,
        i,
        o,
        s,
        a = [],
        c = !0,
        u = !1;
      try {
        if (o = (r = r.call(e)).next, 0 === t) {
          if (Object(r) !== r) return;
          c = !1;
        } else for (; !(c = (n = o.call(r)).done) && (a.push(n.value), a.length !== t); c = !0);
      } catch (e) {
        u = !0, i = e;
      } finally {
        try {
          if (!c && null != r["return"] && (s = r["return"](), Object(s) !== s)) return;
        } finally {
          if (u) throw i;
        }
      }
      return a;
    }
  }(e, r) || t(e, r) || function () {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function t(e, t) {
  if (e) {
    if ("string" == typeof e) return r(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(e, t) : void 0;
  }
}
function r(e, t) {
  (null == t || t > e.length) && (t = e.length);
  for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
  return n;
}
function n(e) {
  return n = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
    return _typeof(e);
  } : function (e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
  }, n(e);
}
function i() {
  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  i = function i() {
    return t;
  };
  var e,
    t = {},
    r = Object.prototype,
    o = r.hasOwnProperty,
    s = Object.defineProperty || function (e, t, r) {
      e[t] = r.value;
    },
    a = "function" == typeof Symbol ? Symbol : {},
    c = a.iterator || "@@iterator",
    u = a.asyncIterator || "@@asyncIterator",
    l = a.toStringTag || "@@toStringTag";
  function d(e, t, r) {
    return Object.defineProperty(e, t, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), e[t];
  }
  try {
    d({}, "");
  } catch (e) {
    d = function d(e, t, r) {
      return e[t] = r;
    };
  }
  function h(e, t, r, n) {
    var i = t && t.prototype instanceof g ? t : g,
      o = Object.create(i.prototype),
      a = new R(n || []);
    return s(o, "_invoke", {
      value: C(e, r, a)
    }), o;
  }
  function p(e, t, r) {
    try {
      return {
        type: "normal",
        arg: e.call(t, r)
      };
    } catch (e) {
      return {
        type: "throw",
        arg: e
      };
    }
  }
  t.wrap = h;
  var _ = "suspendedStart",
    f = "suspendedYield",
    m = "executing",
    v = "completed",
    b = {};
  function g() {}
  function y() {}
  function k() {}
  var S = {};
  d(S, c, function () {
    return this;
  });
  var w = Object.getPrototypeOf,
    A = w && w(w(D([])));
  A && A !== r && o.call(A, c) && (S = A);
  var E = k.prototype = g.prototype = Object.create(S);
  function T(e) {
    ["next", "throw", "return"].forEach(function (t) {
      d(e, t, function (e) {
        return this._invoke(t, e);
      });
    });
  }
  function P(e, t) {
    function r(i, s, a, c) {
      var u = p(e[i], e, s);
      if ("throw" !== u.type) {
        var l = u.arg,
          d = l.value;
        return d && "object" == n(d) && o.call(d, "__await") ? t.resolve(d.__await).then(function (e) {
          r("next", e, a, c);
        }, function (e) {
          r("throw", e, a, c);
        }) : t.resolve(d).then(function (e) {
          l.value = e, a(l);
        }, function (e) {
          return r("throw", e, a, c);
        });
      }
      c(u.arg);
    }
    var i;
    s(this, "_invoke", {
      value: function value(e, n) {
        function o() {
          return new t(function (t, i) {
            r(e, n, t, i);
          });
        }
        return i = i ? i.then(o, o) : o();
      }
    });
  }
  function C(t, r, n) {
    var i = _;
    return function (o, s) {
      if (i === m) throw new Error("Generator is already running");
      if (i === v) {
        if ("throw" === o) throw s;
        return {
          value: e,
          done: !0
        };
      }
      for (n.method = o, n.arg = s;;) {
        var a = n.delegate;
        if (a) {
          var c = O(a, n);
          if (c) {
            if (c === b) continue;
            return c;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (i === _) throw i = v, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        i = m;
        var u = p(t, r, n);
        if ("normal" === u.type) {
          if (i = n.done ? v : f, u.arg === b) continue;
          return {
            value: u.arg,
            done: n.done
          };
        }
        "throw" === u.type && (i = v, n.method = "throw", n.arg = u.arg);
      }
    };
  }
  function O(t, r) {
    var n = r.method,
      i = t.iterator[n];
    if (i === e) return r.delegate = null, "throw" === n && t.iterator["return"] && (r.method = "return", r.arg = e, O(t, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), b;
    var o = p(i, t.iterator, r.arg);
    if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, b;
    var s = o.arg;
    return s ? s.done ? (r[t.resultName] = s.value, r.next = t.nextLoc, "return" !== r.method && (r.method = "next", r.arg = e), r.delegate = null, b) : s : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, b);
  }
  function x(e) {
    var t = {
      tryLoc: e[0]
    };
    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
  }
  function B(e) {
    var t = e.completion || {};
    t.type = "normal", delete t.arg, e.completion = t;
  }
  function R(e) {
    this.tryEntries = [{
      tryLoc: "root"
    }], e.forEach(x, this), this.reset(!0);
  }
  function D(t) {
    if (t || "" === t) {
      var r = t[c];
      if (r) return r.call(t);
      if ("function" == typeof t.next) return t;
      if (!isNaN(t.length)) {
        var i = -1,
          s = function r() {
            for (; ++i < t.length;) if (o.call(t, i)) return r.value = t[i], r.done = !1, r;
            return r.value = e, r.done = !0, r;
          };
        return s.next = s;
      }
    }
    throw new TypeError(n(t) + " is not iterable");
  }
  return y.prototype = k, s(E, "constructor", {
    value: k,
    configurable: !0
  }), s(k, "constructor", {
    value: y,
    configurable: !0
  }), y.displayName = d(k, l, "GeneratorFunction"), t.isGeneratorFunction = function (e) {
    var t = "function" == typeof e && e.constructor;
    return !!t && (t === y || "GeneratorFunction" === (t.displayName || t.name));
  }, t.mark = function (e) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(e, k) : (e.__proto__ = k, d(e, l, "GeneratorFunction")), e.prototype = Object.create(E), e;
  }, t.awrap = function (e) {
    return {
      __await: e
    };
  }, T(P.prototype), d(P.prototype, u, function () {
    return this;
  }), t.AsyncIterator = P, t.async = function (e, r, n, i, o) {
    void 0 === o && (o = Promise);
    var s = new P(h(e, r, n, i), o);
    return t.isGeneratorFunction(r) ? s : s.next().then(function (e) {
      return e.done ? e.value : s.next();
    });
  }, T(E), d(E, l, "Generator"), d(E, c, function () {
    return this;
  }), d(E, "toString", function () {
    return "[object Generator]";
  }), t.keys = function (e) {
    var t = Object(e),
      r = [];
    for (var n in t) r.push(n);
    return r.reverse(), function e() {
      for (; r.length;) {
        var n = r.pop();
        if (n in t) return e.value = n, e.done = !1, e;
      }
      return e.done = !0, e;
    };
  }, t.values = D, R.prototype = {
    constructor: R,
    reset: function reset(t) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = "next", this.arg = e, this.tryEntries.forEach(B), !t) for (var r in this) "t" === r.charAt(0) && o.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = e);
    },
    stop: function stop() {
      this.done = !0;
      var e = this.tryEntries[0].completion;
      if ("throw" === e.type) throw e.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(t) {
      if (this.done) throw t;
      var r = this;
      function n(n, i) {
        return a.type = "throw", a.arg = t, r.next = n, i && (r.method = "next", r.arg = e), !!i;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var s = this.tryEntries[i],
          a = s.completion;
        if ("root" === s.tryLoc) return n("end");
        if (s.tryLoc <= this.prev) {
          var c = o.call(s, "catchLoc"),
            u = o.call(s, "finallyLoc");
          if (c && u) {
            if (this.prev < s.catchLoc) return n(s.catchLoc, !0);
            if (this.prev < s.finallyLoc) return n(s.finallyLoc);
          } else if (c) {
            if (this.prev < s.catchLoc) return n(s.catchLoc, !0);
          } else {
            if (!u) throw new Error("try statement without catch or finally");
            if (this.prev < s.finallyLoc) return n(s.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(e, t) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var n = this.tryEntries[r];
        if (n.tryLoc <= this.prev && o.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
          var i = n;
          break;
        }
      }
      i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
      var s = i ? i.completion : {};
      return s.type = e, s.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, b) : this.complete(s);
    },
    complete: function complete(e, t) {
      if ("throw" === e.type) throw e.arg;
      return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), b;
    },
    finish: function finish(e) {
      for (var t = this.tryEntries.length - 1; t >= 0; --t) {
        var r = this.tryEntries[t];
        if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), B(r), b;
      }
    },
    "catch": function _catch(e) {
      for (var t = this.tryEntries.length - 1; t >= 0; --t) {
        var r = this.tryEntries[t];
        if (r.tryLoc === e) {
          var n = r.completion;
          if ("throw" === n.type) {
            var i = n.arg;
            B(r);
          }
          return i;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(t, r, n) {
      return this.delegate = {
        iterator: D(t),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = e), b;
    }
  }, t;
}
function o(e, t) {
  for (var r = 0; r < t.length; r++) {
    var i = t[r];
    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, (o = i.key, s = void 0, s = function (e, t) {
      if ("object" !== n(e) || null === e) return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 !== r) {
        var i = r.call(e, t || "default");
        if ("object" !== n(i)) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === t ? String : Number)(e);
    }(o, "string"), "symbol" === n(s) ? s : String(s)), i);
  }
  var o, s;
}
function s(e, t, r) {
  return t && o(e.prototype, t), r && o(e, r), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function a(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function c(e, t) {
  if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
  e.prototype = Object.create(t && t.prototype, {
    constructor: {
      value: e,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(e, "prototype", {
    writable: !1
  }), t && _(e, t);
}
function u(e) {
  var t = p();
  return function () {
    var r,
      i = f(e);
    if (t) {
      var o = f(this).constructor;
      r = Reflect.construct(i, arguments, o);
    } else r = i.apply(this, arguments);
    return function (e, t) {
      if (t && ("object" === n(t) || "function" == typeof t)) return t;
      if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
      return l(e);
    }(this, r);
  };
}
function l(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function d(e) {
  var t = "function" == typeof Map ? new Map() : void 0;
  return d = function d(e) {
    if (null === e || !function (e) {
      try {
        return -1 !== Function.toString.call(e).indexOf("[native code]");
      } catch (t) {
        return "function" == typeof e;
      }
    }(e)) return e;
    if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== t) {
      if (t.has(e)) return t.get(e);
      t.set(e, r);
    }
    function r() {
      return h(e, arguments, f(this).constructor);
    }
    return r.prototype = Object.create(e.prototype, {
      constructor: {
        value: r,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), _(r, e);
  }, d(e);
}
function h(e, t, r) {
  return h = p() ? Reflect.construct.bind() : function (e, t, r) {
    var n = [null];
    n.push.apply(n, t);
    var i = new (Function.bind.apply(e, n))();
    return r && _(i, r.prototype), i;
  }, h.apply(null, arguments);
}
function p() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
  } catch (e) {
    return !1;
  }
}
function _(e, t) {
  return _ = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
    return e.__proto__ = t, e;
  }, _(e, t);
}
function f(e) {
  return f = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {
    return e.__proto__ || Object.getPrototypeOf(e);
  }, f(e);
}
var m, v, b, g, y, k;
function S(e, t, r, n) {
  return new (r || (r = Promise))(function (i, o) {
    function s(e) {
      try {
        c(n.next(e));
      } catch (e) {
        o(e);
      }
    }
    function a(e) {
      try {
        c(n["throw"](e));
      } catch (e) {
        o(e);
      }
    }
    function c(e) {
      var t;
      e.done ? i(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {
        e(t);
      })).then(s, a);
    }
    c((n = n.apply(e, t || [])).next());
  });
}
"function" == typeof SuppressedError && SuppressedError, function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.oauth = "oauth", e.otp = "otp", e.crypto = "crypto", e.passwords = "passwords", e.passkeys = "passkeys";
}(m || (m = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft", e.Apple = "apple", e.Github = "github", e.GitLab = "gitlab", e.Facebook = "facebook", e.Discord = "discord", e.Salesforce = "salesforce", e.Slack = "slack", e.Amazon = "amazon", e.Bitbucket = "bitbucket", e.LinkedIn = "linkedin", e.Coinbase = "coinbase", e.Twitch = "twitch", e.Twitter = "twitter", e.TikTok = "tiktok", e.Snapchat = "snapchat", e.Figma = "figma", e.Yahoo = "yahoo";
}(v || (v = {})), function (e) {
  e.Vessel = "Vessel", e.Phantom = "Phantom", e.Metamask = "Metamask", e.Coinbase = "Coinbase", e.Binance = "Binance", e.GenericEthereumWallet = "Other Ethereum Wallet", e.GenericSolanaWallet = "Other Solana Wallet";
}(b || (b = {})), function (e) {
  e.embedded = "embedded", e.floating = "floating";
}(g || (g = {})), function (e) {
  e.SMS = "sms", e.WhatsApp = "whatsapp", e.Email = "email";
}(y || (y = {})), function (e) {
  e.MagicLinkLoginOrCreateEvent = "MAGIC_LINK_LOGIN_OR_CREATE", e.OTPsLoginOrCreateEvent = "OTP_LOGIN_OR_CREATE", e.OTPsAuthenticate = "OTP_AUTHENTICATE", e.CryptoWalletAuthenticateStart = "CRYPTO_WALLET_AUTHENTICATE_START", e.CryptoWalletAuthenticate = "CRYPTO_WALLET_AUTHENTICATE", e.PasswordCreate = "PASSWORD_CREATE", e.PasswordAuthenticate = "PASSWORD_AUTHENTICATE", e.PasswordResetByEmailStart = "PASSWORD_RESET_BY_EMAIL_START", e.PasswordResetByEmail = "PASSWORD_RESET_BY_EMAIL", e.PasskeyRegister = "PASSKEY_REGISTER", e.PasskeyAuthenticate = "PASSKEY_AUTHENTICATE", e.PasskeySkip = "PASSKEY_SKIP", e.PasskeyDone = "PASSKEY_DONE", e.B2BMagicLinkEmailLoginOrSignup = "B2B_MAGIC_LINK_EMAIL_LOGIN_OR_SIGNUP", e.B2BMagicLinkAuthenticate = "B2B_MAGIC_LINK_AUTHENTICATE", e.B2BMagicLinkEmailDiscoverySend = "B2B_MAGIC_LINK_EMAIL_DISCOVERY_SEND", e.B2BMagicLinkDiscoveryAuthenticate = "B2B_MAGIC_LINK_DISCOVERY_AUTHENTICATE", e.B2BSSOStart = "B2B_SSO_START", e.B2BSSOAuthenticate = "B2B_SSO_AUTHENTICATE", e.B2BOAuthAuthenticate = "B2B_OAUTH_AUTHENTICATE", e.B2BOAuthDiscoveryAuthenticate = "B2B_OAUTH_DISCOVERY_AUTHENTICATE", e.B2BDiscoveryOrganizationsCreate = "B2B_DISCOVERY_ORGANIZATIONS_CREATE", e.B2BDiscoveryIntermediateSessionExchange = "B2B_DISCOVERY_INTERMEDIATE_SESSION_EXCHANGE", e.B2BPasswordAuthenticate = "B2B_PASSWORD_AUTHENTICATE", e.B2BPasswordResetByEmailStart = "B2B_PASSWORD_RESET_BY_EMAIL_START", e.B2BPasswordResetByEmail = "B2B_PASSWORD_RESET_BY_EMAIL", e.B2BPasswordResetBySession = "B2B_PASSWORD_RESET_BY_SESSION";
}(k || (k = {}));
var w,
  A,
  E,
  T,
  P,
  C = function (e) {
    c(r, d(Error));
    var t = u(r);
    function r(e, n) {
      var i;
      return a(this, r), (i = t.call(this, e + "\n" + n)).message = e + "\n" + n, i.name = "SDKAPIUnreachableError", i.details = n, Object.setPrototypeOf(l(i), r.prototype), i;
    }
    return s(r);
  }(),
  O = function (e) {
    c(r, d(Error));
    var t = u(r);
    function r(e, n) {
      var i;
      return a(this, r), (i = t.call(this)).name = "StytchSDKUsageError", i.message = "Invalid call to ".concat(e, "\n") + n, i;
    }
    return s(r);
  }(),
  x = function (e) {
    c(r, d(Error));
    var t = u(r);
    function r(e) {
      var n, i;
      a(this, r), (n = t.call(this)).name = "StytchSDKSchemaError";
      var o = null === (i = e.body) || void 0 === i ? void 0 : i.map(function (e) {
        return "".concat(e.dataPath, ": ").concat(e.message);
      }).join("\n");
      return n.message = "[400] Request does not match expected schema\n".concat(o), n;
    }
    return s(r);
  }(),
  B = function (e) {
    c(r, d(Error));
    var t = u(r);
    function r(e) {
      var n;
      a(this, r), (n = t.call(this)).name = "StytchSDKAPIError";
      var i = e.status_code,
        o = e.error_type,
        s = e.error_message,
        c = e.error_url,
        u = e.request_id;
      return n.error_type = o, n.error_message = s, n.error_url = c, n.request_id = u, n.status_code = i, n.message = "[".concat(i, "] ").concat(o, "\n") + "".concat(s, "\n") + "See ".concat(c, " for more information.\n") + (u ? "request_id: ".concat(u, "\n") : ""), n;
    }
    return s(r);
  }(),
  R = ["unauthorized_credentials", "user_unauthenticated", "invalid_secret_authentication", "session_not_found"];
!function (e) {
  e.BiometricsSensorError = "biometrics_sensor_error", e.DeviceCredentialsNotAllowed = "device_credentials_not_allowed", e.DeviceHardwareError = "device_hardware_error", e.InternalError = "internal_error", e.KeyInvalidated = "key_invalidated", e.KeystoreUnavailable = "keystore_unavailable", e.NoBiometricsEnrolled = "no_biometrics_enrolled", e.NoBiometricsRegistration = "no_biometrics_registration", e.SessionExpired = "session_expired", e.UserCancellation = "user_cancellation", e.UserLockedOut = "user_locked_out", e.BiometricsNotAvailable = "biometrics_not_available";
}(w || (w = {})), function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.sso = "sso", e.passwords = "passwords", e.oauth = "oauth";
}(A || (A = {})), function (e) {
  e.Discovery = "Discovery", e.Organization = "Organization", e.PasswordReset = "PasswordReset";
}(E || (E = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft";
}(T || (T = {})), (P || (P = {})).RequiredCatcha = "Catcha Required";
var D,
  I = function (e) {
    c(r, d(Error));
    var t = u(r);
    function r(e) {
      var n;
      return a(this, r), (n = t.call(this, e)).type = e, n;
    }
    return s(r);
  }();
function L(e) {
  var t,
    r = e.method,
    n = e.errorMessage,
    o = e.finalURL,
    s = e.basicAuthHeader,
    a = e.xSDKClientHeader,
    c = e.xSDKParentHostHeader,
    u = e.body;
  return S(this, void 0, void 0, i().mark(function e() {
    var l, d, h, p, _, f;
    return i().wrap(function (e) {
      for (;;) switch (e.prev = e.next) {
        case 0:
          return l = {
            Authorization: s,
            "Content-Type": "application/json",
            "X-SDK-Client": a
          }, c && (l["X-SDK-Parent-Host"] = c), d = {
            method: r,
            headers: l,
            body: u && JSON.stringify(u)
          }, e.prev = 3, e.next = 6, fetch(o, d);
        case 6:
          h = e.sent, e.next = 14;
          break;
        case 9:
          if (e.prev = 9, e.t0 = e["catch"](3), "Failed to fetch" !== e.t0.message) {
            e.next = 13;
            break;
          }
          throw new C(n, "Unable to contact the Stytch servers. Are you online?");
        case 13:
          throw e.t0;
        case 14:
          if (!(h.status <= 299)) {
            e.next = 25;
            break;
          }
          return e.prev = 15, e.next = 18, h.json();
        case 18:
          return p = e.sent, e.abrupt("return", p.data);
        case 22:
          throw e.prev = 22, e.t1 = e["catch"](15), new C(n, "Invalid JSON response from the Stytch servers.");
        case 25:
          if (200 === h.status || !(null === (t = h.headers.get("content-type")) || void 0 === t ? void 0 : t.includes("application/json"))) {
            e.next = 38;
            break;
          }
          return e.prev = 26, e.next = 29, h.json();
        case 29:
          _ = e.sent, e.next = 35;
          break;
        case 32:
          throw e.prev = 32, e.t2 = e["catch"](26), new C(n, "Invalid or no response from server");
        case 35:
          if (!("body" in _ || "params" in _ || "query" in _)) {
            e.next = 37;
            break;
          }
          throw new x(_);
        case 37:
          throw new B(_);
        case 38:
          return e.prev = 38, e.next = 41, h.text();
        case 41:
          f = e.sent, e.next = 47;
          break;
        case 44:
          throw e.prev = 44, e.t3 = e["catch"](38), new C(n, "Invalid response from the Stytch servers.");
        case 47:
          if (!f.includes("Captcha required")) {
            e.next = 49;
            break;
          }
          throw new I(P.RequiredCatcha);
        case 49:
          throw new C(n, "Invalid response from the Stytch servers.");
        case 50:
        case "end":
          return e.stop();
      }
    }, e, null, [[3, 9], [15, 22], [26, 32], [38, 44]]);
  }));
}
var M = new Uint8Array(16);
function N() {
  if (!D && !(D = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto))) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
  return D(M);
}
var j = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
for (var F = [], K = 0; K < 256; ++K) F.push((K + 256).toString(16).substr(1));
function U(e) {
  var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
    r = (F[e[t + 0]] + F[e[t + 1]] + F[e[t + 2]] + F[e[t + 3]] + "-" + F[e[t + 4]] + F[e[t + 5]] + "-" + F[e[t + 6]] + F[e[t + 7]] + "-" + F[e[t + 8]] + F[e[t + 9]] + "-" + F[e[t + 10]] + F[e[t + 11]] + F[e[t + 12]] + F[e[t + 13]] + F[e[t + 14]] + F[e[t + 15]]).toLowerCase();
  if (!function (e) {
    return "string" == typeof e && j.test(e);
  }(r)) throw TypeError("Stringified UUID is invalid");
  return r;
}
function z(e, t, r) {
  var n = (e = e || {}).random || (e.rng || N)();
  if (n[6] = 15 & n[6] | 64, n[8] = 63 & n[8] | 128, t) {
    r = r || 0;
    for (var i = 0; i < 16; ++i) t[r + i] = n[i];
    return t;
  }
  return U(n);
}
var W = {};
function H(e, t) {
  return S(this, void 0, void 0, i().mark(function r() {
    return i().wrap(function (r) {
      for (;;) switch (r.prev = r.next) {
        case 0:
          if (void 0 === W[e]) {
            r.next = 2;
            break;
          }
          return r.abrupt("return", W[e]);
        case 2:
          return W[e] = G(e, t), r.abrupt("return", W[e]);
        case 4:
        case "end":
          return r.stop();
      }
    }, r);
  }));
}
function G(e, t) {
  return new Promise(function (r, n) {
    var i = function (e) {
      var t = q(e);
      if (t[0]) return t[0];
    }(e);
    if (i && "true" === i.dataset.loaded) try {
      r(t());
    } catch (t) {
      return n(new Error("".concat(e, " already loaded, but module was not found in global scope: ").concat(t)));
    }
    var o = function (e) {
      var t = document.createElement("script");
      return t.setAttribute("src", e), t.setAttribute("async", "true"), t.setAttribute("defer", "true"), document.head.appendChild(t), t;
    }(e);
    o.addEventListener("load", function () {
      o.dataset.loaded = "true";
      try {
        r(t());
      } catch (t) {
        n(new Error("".concat(e, " was loaded, but module was not found in global scope: ").concat(t)));
      }
    }), o.addEventListener("error", function (t) {
      n(new Error("".concat(e, " could not be loaded: ").concat(t)));
    });
  });
}
var q = function q(e) {
  return document.querySelectorAll('script[src="'.concat(e, '"]'));
};
var Y,
  V = ["[Stytch]"],
  J = function J() {
    for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
    return (e = console).warn.apply(e, V.concat(r));
  },
  $ = function $() {
    for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];
    return (e = console).error.apply(e, V.concat(r));
  },
  X = "\nYou can find your public token at https://stytch.com/dashboard/api-keys.",
  Z = function Z(e) {
    return e.includes("public-token-test");
  },
  Q = function Q(e) {
    var r = {
      isObject: function isObject(t, i) {
        var o = "object" === n(i) && !Array.isArray(i) && null !== i;
        if (!o) throw new O(e, t + " must be an object.");
        return r;
      },
      isOptionalObject: function isOptionalObject(e, t) {
        return void 0 === t ? r : r.isObject(e, t);
      },
      isString: function isString(t, n) {
        if ("string" != typeof n) throw new O(e, t + " must be a string.");
        return r;
      },
      isOptionalString: function isOptionalString(e, t) {
        return void 0 === t ? r : r.isString(e, t);
      },
      isStringArray: function isStringArray(n, i) {
        if (!Array.isArray(i)) throw new O(e, n + " must be an array of strings.");
        var o,
          s = function (e, r) {
            var _n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (!_n) {
              if (Array.isArray(e) || (_n = t(e)) || r && e && "number" == typeof e.length) {
                _n && (e = _n);
                var i = 0,
                  o = function o() {};
                return {
                  s: o,
                  n: function n() {
                    return i >= e.length ? {
                      done: !0
                    } : {
                      done: !1,
                      value: e[i++]
                    };
                  },
                  e: function e(_e2) {
                    throw _e2;
                  },
                  f: o
                };
              }
              throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var s,
              a = !0,
              c = !1;
            return {
              s: function s() {
                _n = _n.call(e);
              },
              n: function n() {
                var e = _n.next();
                return a = e.done, e;
              },
              e: function e(_e3) {
                c = !0, s = _e3;
              },
              f: function f() {
                try {
                  a || null == _n["return"] || _n["return"]();
                } finally {
                  if (c) throw s;
                }
              }
            };
          }(i);
        try {
          for (s.s(); !(o = s.n()).done;) {
            if ("string" != typeof o.value) throw new O(e, n + " must be an array of strings.");
          }
        } catch (e) {
          s.e(e);
        } finally {
          s.f();
        }
        return r;
      },
      isOptionalStringArray: function isOptionalStringArray(e, t) {
        return void 0 === t ? r : r.isStringArray(e, t);
      },
      isNumber: function isNumber(t, n) {
        if ("number" != typeof n) throw new O(e, t + " must be a number.");
        return r;
      },
      isOptionalNumber: function isOptionalNumber(e, t) {
        return void 0 === t ? r : r.isNumber(e, t);
      },
      isBoolean: function isBoolean(t, n) {
        if ("boolean" != typeof n) throw new O(e, t + " must be a boolean.");
        return r;
      },
      isOptionalBoolean: function isOptionalBoolean(e, t) {
        return void 0 === t ? r : r.isBoolean(e, t);
      }
    };
    return r;
  },
  ee = s(function e(t, r, n) {
    var o = this,
      s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function () {
        return Promise.resolve(void 0);
      };
    a(this, e), this.bootstrapPromise = n, this.isEnabled = function () {
      return S(o, void 0, void 0, i().mark(function e() {
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.abrupt("return", this.state.then(function (e) {
                return e.enabled;
              }));
            case 1:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.getTelemetryID = function () {
      return S(o, void 0, void 0, i().mark(function e() {
        var t, r, n, o;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this.state;
            case 2:
              if (t = e.sent, r = t.publicToken, n = t.enabled, o = t.dfpBackendURL, n) {
                e.next = 8;
                break;
              }
              return e.abrupt("return", void 0);
            case 8:
              return e.next = 10, window.GetTelemetryID(r, "".concat(o, "/submit"));
            case 10:
              return e.abrupt("return", e.sent);
            case 11:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.getDFPTelemetryIDAndCaptcha = function () {
      return S(o, void 0, void 0, i().mark(function e() {
        var t, r, n, o, s, a;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this.state;
            case 2:
              if (t = e.sent, r = t.enabled, n = t.executeRecaptcha, o = t.mode, s = void 0, a = void 0, r) {
                e.next = 12;
                break;
              }
              return e.next = 11, n();
            case 11:
              a = e.sent;
            case 12:
              if ("DECISIONING" !== o) {
                e.next = 18;
                break;
              }
              return e.next = 15, this.getTelemetryID();
            case 15:
              s = e.sent, e.next = 25;
              break;
            case 18:
              if ("OBSERVATION" !== o) {
                e.next = 25;
                break;
              }
              return e.next = 21, this.getTelemetryID();
            case 21:
              return s = e.sent, e.next = 24, n();
            case 24:
              a = e.sent;
            case 25:
              return e.abrupt("return", {
                dfp_telemetry_id: s,
                captcha_token: a
              });
            case 26:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.retryWithCaptchaAndDFP = function (e, t) {
      return S(o, void 0, void 0, i().mark(function r() {
        var n, o, s;
        return i().wrap(function (r) {
          for (;;) switch (r.prev = r.next) {
            case 0:
              return r.next = 2, this.state;
            case 2:
              if (n = r.sent, o = n.enabled, s = n.executeRecaptcha, e.type !== P.RequiredCatcha || !o) {
                r.next = 14;
                break;
              }
              if (!t.body) {
                r.next = 13;
                break;
              }
              return r.next = 9, this.getTelemetryID();
            case 9:
              return t.body.dfp_telemetry_id = r.sent, r.next = 12, s();
            case 12:
              t.body.captcha_token = r.sent;
            case 13:
              return r.abrupt("return", t);
            case 14:
              throw new Error("Unable to query captcha and/or dfp telemetry ID");
            case 15:
            case "end":
              return r.stop();
          }
        }, r, this);
      }));
    }, this.state = n.then(function (e) {
      return S(o, void 0, void 0, i().mark(function n() {
        return i().wrap(function (n) {
          for (;;) switch (n.prev = n.next) {
            case 0:
              if (e.runDFPProtectedAuth) {
                n.next = 2;
                break;
              }
              return n.abrupt("return", {
                publicToken: t,
                dfpBackendURL: r,
                enabled: !1,
                loaded: !1,
                executeRecaptcha: s
              });
            case 2:
              return n.next = 4, void H("".concat("https://elements.stytch.com", "/telemetry.js"), function () {
                return window;
              });
            case 4:
              return n.abrupt("return", {
                publicToken: t,
                dfpBackendURL: r,
                enabled: !0,
                mode: e.dfpProtectedAuthMode || "OBSERVATION",
                loaded: !0,
                executeRecaptcha: s
              });
            case 5:
            case "end":
              return n.stop();
          }
        }, n);
      }));
    });
  }),
  te = function te() {
    return {
      isEnabled: function isEnabled() {
        return S(void 0, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.abrupt("return", !1);
              case 1:
              case "end":
                return e.stop();
            }
          }, e);
        }));
      },
      getTelemetryID: function getTelemetryID() {
        return S(void 0, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.abrupt("return", void 0);
              case 1:
              case "end":
                return e.stop();
            }
          }, e);
        }));
      },
      getDFPTelemetryIDAndCaptcha: function getDFPTelemetryIDAndCaptcha() {
        return S(void 0, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.abrupt("return", {
                  dfp_telemetry_id: void 0,
                  captcha_token: void 0
                });
              case 1:
              case "end":
                return e.stop();
            }
          }, e);
        }));
      },
      retryWithCaptchaAndDFP: function retryWithCaptchaAndDFP() {
        return S(void 0, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                throw new Error("DFP protected auth is disabled");
              case 1:
              case "end":
                return e.stop();
            }
          }, e);
        }));
      }
    };
  },
  re = function () {
    function e(t) {
      a(this, e), this.maxBatchSize = t.maxBatchSize, this.logEventURL = t.logEventURL, setInterval(this.flush.bind(this), t.intervalDurationMs), this.batch = [];
    }
    return s(e, [{
      key: "logEvent",
      value: function value(e, t) {
        this.batch.push({
          telemetry: e,
          event: t
        }), this.batch.length >= this.maxBatchSize && this.flush();
      }
    }, {
      key: "flush",
      value: function value() {
        return S(this, void 0, void 0, i().mark(function e() {
          var t;
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                if (this.batch.length) {
                  e.next = 2;
                  break;
                }
                return e.abrupt("return");
              case 2:
                return t = this.batch, this.batch = [], e.prev = 4, e.next = 7, fetch(this.logEventURL, {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify(t)
                });
              case 7:
                e.next = 11;
                break;
              case 9:
                e.prev = 9, e.t0 = e["catch"](4);
              case 11:
              case "end":
                return e.stop();
            }
          }, e, this, [[4, 9]]);
        }));
      }
    }]), e;
  }();
!function (e) {
  e.LoginOrCreateEML = "login_or_create_eml", e.LoginOrCreateOTP = "login_or_create_otp", e.ResetPassword = "reset_password";
}(Y || (Y = {})), Promise.resolve({
  pkceRequiredForEmailMagicLinks: !1
}), Promise.resolve({
  pkceRequiredForPasswordResets: !1
});
var ne = Promise.resolve({
    pkceRequiredForEmailMagicLinks: !1
  }),
  ie = function () {
    function e(t, r, n, o) {
      var s = this,
        c = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : ne,
        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : te();
      a(this, e), this._networkClient = t, this._subscriptionService = r, this._pkceManager = n, this._passwordResetPKCEManager = o, this._config = c, this.dfpProtectedAuth = u, this.email = {
        invite: function invite(e) {
          return S(s, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return Q("stytch.magicLinks.email.loginOrSignup").isString("email_address", e.email_address).isOptionalString("invite_redirect_url", e.invite_redirect_url).isOptionalString("invite_template_id", e.invite_template_id).isOptionalString("name", e.name).isOptionalString("locale", e.locale).isOptionalStringArray("roles", e.roles), t.abrupt("return", this._networkClient.fetchSDK({
                    url: "/b2b/magic_links/email/invite",
                    body: e,
                    errorMessage: "Failed to send invite.",
                    method: "POST"
                  }));
                case 2:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        loginOrSignup: function loginOrSignup(e) {
          return S(s, void 0, void 0, i().mark(function t() {
            var r, n;
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return Q("stytch.magicLinks.email.loginOrSignup").isString("email_address", e.email_address).isString("organization_id", e.organization_id).isOptionalString("login_redirect_url", e.login_redirect_url).isOptionalString("login_template_id", e.login_template_id).isOptionalString("signup_redirect_url", e.signup_redirect_url).isOptionalString("signup_template_id", e.signup_template_id).isOptionalString("locale", e.locale), t.next = 3, this.getCodeChallenge();
                case 3:
                  return r = t.sent, n = Object.assign(Object.assign({}, e), {
                    pkce_code_challenge: r
                  }), t.abrupt("return", this._networkClient.fetchSDK({
                    url: "/b2b/magic_links/email/login_or_signup",
                    body: n,
                    errorMessage: "Failed to send magic link",
                    method: "POST"
                  }));
                case 6:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        discovery: {
          send: function send(e) {
            return S(s, void 0, void 0, i().mark(function t() {
              var r, n;
              return i().wrap(function (t) {
                for (;;) switch (t.prev = t.next) {
                  case 0:
                    return Q("stytch.magicLinks.email.discovery.send").isString("email_address", e.email_address).isOptionalString("discovery_redirect_url", e.discovery_redirect_url).isOptionalString("login_template_id", e.login_template_id).isOptionalString("locale", e.locale), t.next = 3, this.getCodeChallenge();
                  case 3:
                    return r = t.sent, n = Object.assign(Object.assign({}, e), {
                      pkce_code_challenge: r
                    }), t.abrupt("return", this._networkClient.fetchSDK({
                      url: "/b2b/magic_links/email/discovery/send",
                      body: n,
                      errorMessage: "Failed to send discovery magic link",
                      method: "POST"
                    }));
                  case 6:
                  case "end":
                    return t.stop();
                }
              }, t, this);
            }));
          }
        }
      }, this.authenticate = function (e) {
        return S(s, void 0, void 0, i().mark(function t() {
          var r, n;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.magicLinks.authenticate").isString("magic_links_token", e.magic_links_token).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale), t.next = 3, this._passwordResetPKCEManager.getPKPair();
              case 3:
                if (r = t.sent, n = null, !(null == r ? void 0 : r.code_verifier)) {
                  t.next = 19;
                  break;
                }
                return t.prev = 6, t.next = 9, this.handlePKCEForAuthenticate(this._passwordResetPKCEManager, e);
              case 9:
                n = t.sent, t.next = 19;
                break;
              case 12:
                if (t.prev = 12, t.t0 = t["catch"](6), !t.t0.message.includes("pkce")) {
                  t.next = 18;
                  break;
                }
                console.log("Authenticate with passwords pkce namespace failed. Falling back to authenticate with magic_links namespace."), t.next = 19;
                break;
              case 18:
                throw t.t0;
              case 19:
                if (n) {
                  t.next = 23;
                  break;
                }
                return t.next = 22, this.handlePKCEForAuthenticate(this._pkceManager, e);
              case 22:
                n = t.sent;
              case 23:
                return n.member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: n.member_session,
                    member: n.member
                  },
                  session_token: n.session_token,
                  session_jwt: n.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: n.intermediate_session_token
                }), t.abrupt("return", n);
              case 25:
              case "end":
                return t.stop();
            }
          }, t, this, [[6, 12]]);
        }));
      }, this.discovery = {
        authenticate: function authenticate(e) {
          return S(s, void 0, void 0, i().mark(function t() {
            var r, n, o, s, a, c;
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return Q("stytch.magicLinks.discovery.authenticate").isString("discovery_magic_links_token", e.discovery_magic_links_token), t.next = 3, this._pkceManager.getPKPair();
                case 3:
                  return r = t.sent, t.next = 6, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
                case 6:
                  return n = t.sent, o = n.dfp_telemetry_id, s = n.captcha_token, a = Object.assign({
                    pkce_code_verifier: null == r ? void 0 : r.code_verifier,
                    dfp_telemetry_id: o,
                    captcha_token: s
                  }, e), t.next = 12, this._networkClient.retriableFetchSDK({
                    url: "/b2b/magic_links/discovery/authenticate",
                    body: a,
                    errorMessage: "Failed to authenticate intermediate magic link token",
                    method: "POST",
                    retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                  });
                case 12:
                  return c = t.sent, this._pkceManager.clearPKPair(), this._subscriptionService.updateStateAndTokens({
                    state: null,
                    session_token: null,
                    session_jwt: null,
                    intermediate_session_token: c.intermediate_session_token
                  }), t.abrupt("return", c);
                case 16:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        }
      };
    }
    return s(e, [{
      key: "getCodeChallenge",
      value: function value() {
        return S(this, void 0, void 0, i().mark(function e() {
          var t, r;
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.next = 2, this._config;
              case 2:
                if (t = e.sent, t.pkceRequiredForEmailMagicLinks) {
                  e.next = 6;
                  break;
                }
                return e.abrupt("return", void 0);
              case 6:
                return e.next = 8, this._pkceManager.getPKPair();
              case 8:
                if (!(r = e.sent)) {
                  e.next = 11;
                  break;
                }
                return e.abrupt("return", r.code_challenge);
              case 11:
                return e.next = 13, this._pkceManager.startPKCETransaction();
              case 13:
                return r = e.sent, e.abrupt("return", r.code_challenge);
              case 15:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      }
    }, {
      key: "handlePKCEForAuthenticate",
      value: function value(e, t) {
        return S(this, void 0, void 0, i().mark(function r() {
          var n, o, s, a, c, u;
          return i().wrap(function (r) {
            for (;;) switch (r.prev = r.next) {
              case 0:
                return r.next = 2, e.getPKPair();
              case 2:
                return n = r.sent, r.next = 5, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
              case 5:
                return o = r.sent, s = o.dfp_telemetry_id, a = o.captcha_token, c = Object.assign({
                  pkce_code_verifier: null == n ? void 0 : n.code_verifier,
                  dfp_telemetry_id: s,
                  captcha_token: a
                }, t), r.next = 11, this._networkClient.retriableFetchSDK({
                  url: "/b2b/magic_links/authenticate",
                  body: c,
                  errorMessage: "Failed to authenticate token",
                  method: "POST",
                  retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                });
              case 11:
                return u = r.sent, e.clearPKPair(), r.abrupt("return", u);
              case 14:
              case "end":
                return r.stop();
            }
          }, r, this);
        }));
      }
    }]), e;
  }(),
  oe = s(function e(t, r) {
    var n = this;
    a(this, e), this._networkClient = t, this._subscriptionService = r, this.get = function () {
      return S(n, void 0, void 0, i().mark(function e() {
        var t;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/members/me",
                errorMessage: "Failed to retrieve member info.",
                method: "GET"
              });
            case 2:
              return t = e.sent, this._subscriptionService.updateMember(t.member), e.abrupt("return", t.member);
            case 5:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.getSync = function () {
      return n._subscriptionService.getMember();
    }, this.onChange = function (e) {
      return n._subscriptionService.subscribeToState(function (t) {
        var r;
        return e(null !== (r = null == t ? void 0 : t.member) && void 0 !== r ? r : null);
      });
    }, this.update = function (e) {
      return S(n, void 0, void 0, i().mark(function t() {
        var r;
        return i().wrap(function (t) {
          for (;;) switch (t.prev = t.next) {
            case 0:
              return Q("stytch.self.update").isOptionalString("name", e.name).isOptionalObject("untrusted_metadata", e.untrusted_metadata).isOptionalBoolean("mfa_enrolled", e.mfa_enrolled).isOptionalString("mfa_phone_number", e.mfa_phone_number), t.next = 3, this._networkClient.fetchSDK({
                url: "/b2b/organizations/members/update",
                body: e,
                errorMessage: "Failed to update member.",
                method: "PUT"
              });
            case 3:
              return r = t.sent, this._subscriptionService.updateMember(r.member), t.abrupt("return", r);
            case 6:
            case "end":
              return t.stop();
          }
        }, t, this);
      }));
    }, this.deleteMFAPhoneNumber = function () {
      return S(n, void 0, void 0, i().mark(function e() {
        var t;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/members/deletePhoneNumber",
                errorMessage: "Failed to delete member phone number.",
                method: "DELETE"
              });
            case 2:
              return t = e.sent, this._subscriptionService.updateMember(t.member), e.abrupt("return", t);
            case 5:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.deletePassword = function (e) {
      return S(n, void 0, void 0, i().mark(function t() {
        var r;
        return i().wrap(function (t) {
          for (;;) switch (t.prev = t.next) {
            case 0:
              return t.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/members/passwords/".concat(e),
                errorMessage: "Failed to delete member password.",
                method: "DELETE"
              });
            case 2:
              return r = t.sent, this._subscriptionService.updateMember(r.member), t.abrupt("return", r);
            case 5:
            case "end":
              return t.stop();
          }
        }, t, this);
      }));
    };
  }),
  se = function () {
    function e(t, r, n, o, s) {
      var c = this,
        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : te();
      a(this, e), this._networkClient = t, this._subscriptionService = r, this._pkceManager = n, this._dynamicConfig = o, this._config = s, this.dfpProtectedAuth = u, this.saml = {
        createConnection: function createConnection(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/saml",
                    method: "POST",
                    body: e,
                    errorMessage: "Failed to create SAML Connection."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        updateConnection: function updateConnection(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/saml/".concat(e.connection_id),
                    method: "PUT",
                    body: e,
                    errorMessage: "Failed to update SAML Connection."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        updateConnectionByURL: function updateConnectionByURL(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/saml/".concat(e.connection_id, "/url"),
                    method: "PUT",
                    body: e,
                    errorMessage: "Failed to update SAML Connection."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        deleteVerificationCertificate: function deleteVerificationCertificate(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/saml/".concat(e.connection_id, "/verification_certificates/").concat(e.certificate_id),
                    method: "DELETE",
                    errorMessage: "Failed to delete SAML Verification Certificate."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        }
      }, this.oidc = {
        createConnection: function createConnection(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/oidc",
                    method: "POST",
                    body: e,
                    errorMessage: "Failed to create OIDC Connection."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        },
        updateConnection: function updateConnection(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._networkClient.fetchSDK({
                    url: "/b2b/sso/oidc/".concat(e.connection_id),
                    method: "PUT",
                    body: e,
                    errorMessage: "Failed to update OIDC Connection."
                  });
                case 2:
                  return t.abrupt("return", t.sent);
                case 3:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        }
      };
    }
    return s(e, [{
      key: "authenticate",
      value: function value(e) {
        return S(this, void 0, void 0, i().mark(function t() {
          var r, n, o, s, a;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.sso.authenticate").isString("sso_token", e.sso_token).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale), t.next = 3, this._pkceManager.getPKPair();
              case 3:
                return (r = t.sent) || J("No code verifier found in local storage for SSO flow.\nConsider using stytch.sso.start() to add PKCE to your SSO flows for added security.\nSee https://stytch.com/docs/oauth#guides_pkce for more information."), t.next = 7, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
              case 7:
                return n = t.sent, o = n.dfp_telemetry_id, s = n.captcha_token, t.next = 12, this._networkClient.retriableFetchSDK({
                  url: "/b2b/sso/authenticate",
                  method: "POST",
                  body: Object.assign(Object.assign({
                    pkce_code_verifier: null == r ? void 0 : r.code_verifier
                  }, e), {
                    dfp_telemetry_id: o,
                    captcha_token: s
                  }),
                  errorMessage: "Failed to authenticate token",
                  retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                });
              case 12:
                return a = t.sent, this._pkceManager.clearPKPair(), a.member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: a.member_session,
                    member: a.member
                  },
                  session_token: a.session_token,
                  session_jwt: a.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: a.intermediate_session_token
                }), t.abrupt("return", a);
              case 16:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    }, {
      key: "getBaseApiUrl",
      value: function value() {
        return S(this, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                if (!Z(this._config.publicToken)) {
                  e.next = 2;
                  break;
                }
                return e.abrupt("return", this._config.testAPIURL);
              case 2:
                return e.abrupt("return", this._config.liveAPIURL);
              case 3:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      }
    }, {
      key: "start",
      value: function value(e) {
        var t = e.connection_id,
          r = e.login_redirect_url,
          n = e.signup_redirect_url;
        return S(this, void 0, void 0, i().mark(function e() {
          var o, s, a, c, u;
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.next = 2, this._dynamicConfig;
              case 2:
                return o = e.sent, s = o.pkceRequiredForSso, e.next = 6, this.getBaseApiUrl();
              case 6:
                if (a = e.sent, (c = new URL("".concat(a, "/v1/public/sso/start"))).searchParams.set("public_token", this._config.publicToken), c.searchParams.set("connection_id", t), !s) {
                  e.next = 17;
                  break;
                }
                return e.next = 13, this._pkceManager.startPKCETransaction();
              case 13:
                u = e.sent, c.searchParams.set("pkce_code_challenge", u.code_challenge), e.next = 18;
                break;
              case 17:
                this._pkceManager.clearPKPair();
              case 18:
                r && c.searchParams.set("login_redirect_url", r), n && c.searchParams.set("signup_redirect_url", n), window.location.href = c.toString();
              case 21:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      }
    }, {
      key: "getConnections",
      value: function value() {
        return S(this, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.next = 2, this._networkClient.fetchSDK({
                  url: "/b2b/sso",
                  method: "GET",
                  errorMessage: "Failed to get SSO Connections."
                });
              case 2:
                return e.abrupt("return", e.sent);
              case 3:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      }
    }, {
      key: "deleteConnection",
      value: function value(e) {
        return S(this, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/sso/".concat(e),
                  method: "DELETE",
                  errorMessage: "Failed to delete SSO Connection."
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    }]), e;
  }(),
  ae = s(function e(t, r) {
    var n = this;
    a(this, e), this._networkClient = t, this._subscriptionService = r, this.get = function () {
      return S(n, void 0, void 0, i().mark(function e() {
        var t;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/me",
                errorMessage: "Failed to retrieve organization info.",
                method: "GET"
              });
            case 2:
              return t = e.sent, e.abrupt("return", t.organization);
            case 4:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.update = function (e) {
      return S(n, void 0, void 0, i().mark(function t() {
        var r;
        return i().wrap(function (t) {
          for (;;) switch (t.prev = t.next) {
            case 0:
              return t.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/me",
                errorMessage: "Failed to update organization info.",
                method: "PUT",
                body: e
              });
            case 2:
              return r = t.sent, t.abrupt("return", r);
            case 4:
            case "end":
              return t.stop();
          }
        }, t, this);
      }));
    }, this["delete"] = function () {
      return S(n, void 0, void 0, i().mark(function e() {
        var t;
        return i().wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, this._networkClient.fetchSDK({
                url: "/b2b/organizations/me",
                errorMessage: "Failed to delete organization.",
                method: "DELETE"
              });
            case 2:
              return t = e.sent, this._subscriptionService.destroyState(), e.abrupt("return", t);
            case 5:
            case "end":
              return e.stop();
          }
        }, e, this);
      }));
    }, this.members = {
      create: function create(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members",
                  errorMessage: "Failed to create member.",
                  method: "POST",
                  body: e
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      search: function search(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/me/members/search",
                  errorMessage: "Failed to search members.",
                  method: "POST",
                  body: e
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      update: function update(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members/".concat(e.member_id),
                  errorMessage: "Failed to update member.",
                  method: "PUT",
                  body: e
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      deletePassword: function deletePassword(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members/passwords/".concat(e),
                  errorMessage: "Failed to delete member password.",
                  method: "DELETE"
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      deleteMFAPhoneNumber: function deleteMFAPhoneNumber(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members/mfa_phone_numbers/".concat(e),
                  errorMessage: "Failed to delete member MFA Phone number.",
                  method: "DELETE"
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      "delete": function _delete(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members/".concat(e),
                  errorMessage: "Failed to delete member.",
                  method: "DELETE"
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      reactivate: function reactivate(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.abrupt("return", this._networkClient.fetchSDK({
                  url: "/b2b/organizations/members/".concat(e, "/reactivate"),
                  errorMessage: "Failed to reactivate member.",
                  method: "PUT"
                }));
              case 1:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    };
  }),
  ce = function () {
    function e(t, r, n, o, s) {
      var c = this,
        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : te();
      a(this, e), this._networkClient = t, this._subscriptionService = r, this._pkceManager = n, this._dynamicConfig = o, this._config = s, this.dfpProtectedAuth = u, this.discovery = {
        authenticate: function authenticate(e) {
          return S(c, void 0, void 0, i().mark(function t() {
            var r, n, o, s, a, c;
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return Q("stytch.oauth.discovery.authenticate").isString("discovery_oauth_token", e.discovery_oauth_token), t.next = 3, this._pkceManager.getPKPair();
                case 3:
                  return r = t.sent, t.next = 6, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
                case 6:
                  return n = t.sent, o = n.dfp_telemetry_id, s = n.captcha_token, a = Object.assign({
                    pkce_code_verifier: null == r ? void 0 : r.code_verifier,
                    dfp_telemetry_id: o,
                    captcha_token: s
                  }, e), t.next = 12, this._networkClient.retriableFetchSDK({
                    url: "/b2b/oauth/discovery/authenticate",
                    body: a,
                    errorMessage: "Failed to authenticate discovery oauth token",
                    method: "POST",
                    retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                  });
                case 12:
                  return c = t.sent, this._pkceManager.clearPKPair(), this._subscriptionService.updateStateAndTokens({
                    state: null,
                    session_token: null,
                    session_jwt: null,
                    intermediate_session_token: c.intermediate_session_token
                  }), t.abrupt("return", c);
                case 16:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        }
      }, this.google = {
        start: this.startOAuthFlow(T.Google),
        discovery: {
          start: this.startDiscoveryOAuthFlow(T.Google)
        }
      }, this.microsoft = {
        start: this.startOAuthFlow(T.Microsoft),
        discovery: {
          start: this.startDiscoveryOAuthFlow(T.Microsoft)
        }
      };
    }
    return s(e, [{
      key: "authenticate",
      value: function value(e) {
        return S(this, void 0, void 0, i().mark(function t() {
          var r, n, o, s, a;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.oauth.authenticate").isString("oauth_token", e.oauth_token).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale), t.next = 3, this._pkceManager.getPKPair();
              case 3:
                return (r = t.sent) || J("No code verifier found in local storage for OAuth flow.\nConsider using stytch.oauth.$provider.start() to add PKCE to your OAuth flows for added security.\nSee https://stytch.com/docs/oauth#guides_pkce for more information."), t.next = 7, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
              case 7:
                return n = t.sent, o = n.dfp_telemetry_id, s = n.captcha_token, t.next = 12, this._networkClient.retriableFetchSDK({
                  url: "/b2b/oauth/authenticate",
                  method: "POST",
                  body: Object.assign({
                    pkce_code_verifier: null == r ? void 0 : r.code_verifier,
                    dfp_telemetry_id: o,
                    captcha_token: s
                  }, e),
                  errorMessage: "Failed to authenticate token",
                  retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                });
              case 12:
                return a = t.sent, this._pkceManager.clearPKPair(), a.member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: a.member_session,
                    member: a.member
                  },
                  session_token: a.session_token,
                  session_jwt: a.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: a.intermediate_session_token
                }), t.abrupt("return", a);
              case 16:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    }, {
      key: "getBaseApiUrl",
      value: function value() {
        return S(this, void 0, void 0, i().mark(function e() {
          var t, r;
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.next = 2, this._dynamicConfig;
              case 2:
                if (t = e.sent, !(r = t.cnameDomain)) {
                  e.next = 6;
                  break;
                }
                return e.abrupt("return", "https://".concat(r));
              case 6:
                if (!Z(this._config.publicToken)) {
                  e.next = 8;
                  break;
                }
                return e.abrupt("return", this._config.testAPIURL);
              case 8:
                return e.abrupt("return", this._config.liveAPIURL);
              case 9:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      }
    }, {
      key: "startOAuthFlow",
      value: function value(e) {
        var t = this;
        return function (r) {
          var n = r.organization_id,
            o = r.organization_slug,
            s = r.login_redirect_url,
            a = r.signup_redirect_url,
            c = r.custom_scopes,
            u = r.provider_params;
          return S(t, void 0, void 0, i().mark(function t() {
            var r, l, d, h, p, _;
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._dynamicConfig;
                case 2:
                  return r = t.sent, l = r.pkceRequiredForOAuth, t.next = 6, this.getBaseApiUrl();
                case 6:
                  if (d = t.sent, (h = new URL("".concat(d, "/v1/b2b/public/oauth/").concat(e, "/start"))).searchParams.set("public_token", this._config.publicToken), n && "" != n && h.searchParams.set("organization_id", n), o && "" != o && h.searchParams.set("slug", o), c && (Q("startOAuthFlow").isStringArray("custom_scopes", c), h.searchParams.set("custom_scopes", c.join(" "))), u) for (p in Q("startOAuthFlow").isOptionalObject("provider_params", u), u) h.searchParams.set("provider_" + p, u[p]);
                  if (!l) {
                    t.next = 20;
                    break;
                  }
                  return t.next = 16, this._pkceManager.startPKCETransaction();
                case 16:
                  _ = t.sent, h.searchParams.set("pkce_code_challenge", _.code_challenge), t.next = 21;
                  break;
                case 20:
                  this._pkceManager.clearPKPair();
                case 21:
                  s && h.searchParams.set("login_redirect_url", s), a && h.searchParams.set("signup_redirect_url", a), window.location.href = h.toString();
                case 24:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        };
      }
    }, {
      key: "startDiscoveryOAuthFlow",
      value: function value(e) {
        var t = this;
        return function (r) {
          var n = r.discovery_redirect_url,
            o = r.custom_scopes,
            s = r.provider_params;
          return S(t, void 0, void 0, i().mark(function t() {
            var r, a, c, u, l, d;
            return i().wrap(function (t) {
              for (;;) switch (t.prev = t.next) {
                case 0:
                  return t.next = 2, this._dynamicConfig;
                case 2:
                  return r = t.sent, a = r.pkceRequiredForOAuth, t.next = 6, this.getBaseApiUrl();
                case 6:
                  if (c = t.sent, (u = new URL("".concat(c, "/v1/b2b/public/oauth/").concat(e, "/discovery/start"))).searchParams.set("public_token", this._config.publicToken), o && (Q("startOAuthFlow").isStringArray("custom_scopes", o), u.searchParams.set("custom_scopes", o.join(" "))), s) for (l in Q("startOAuthFlow").isOptionalObject("provider_params", s), s) u.searchParams.set("provider_" + l, s[l]);
                  if (!a) {
                    t.next = 18;
                    break;
                  }
                  return t.next = 14, this._pkceManager.startPKCETransaction();
                case 14:
                  d = t.sent, u.searchParams.set("pkce_code_challenge", d.code_challenge), t.next = 19;
                  break;
                case 18:
                  this._pkceManager.clearPKPair();
                case 19:
                  n && u.searchParams.set("discovery_redirect_url", n), window.location.href = u.toString();
                case 21:
                case "end":
                  return t.stop();
              }
            }, t, this);
          }));
        };
      }
    }]), e;
  }(),
  ue = function () {
    function e(t, r) {
      var n = this;
      a(this, e), this._networkClient = t, this._subscriptionService = r, this.getSync = function () {
        return n._subscriptionService.getSession();
      }, this.onChange = function (e) {
        return n._subscriptionService.subscribeToState(function (t) {
          var r;
          return e(null !== (r = null == t ? void 0 : t.session) && void 0 !== r ? r : null);
        });
      }, this.revoke = function (e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.prev = 0, t.next = 3, this._networkClient.fetchSDK({
                  url: "/b2b/sessions/revoke",
                  errorMessage: "Error revoking session",
                  method: "POST"
                });
              case 3:
                return r = t.sent, this._subscriptionService.destroyState(), t.abrupt("return", r);
              case 8:
                throw t.prev = 8, t.t0 = t["catch"](0), ((null == e ? void 0 : e.forceClear) || R.includes(t.t0.error_type)) && this._subscriptionService.destroyState(), t.t0;
              case 12:
              case "end":
                return t.stop();
            }
          }, t, this, [[0, 8]]);
        }));
      }, this.authenticate = function (e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r, n;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return t.prev = 0, r = {
                  session_duration_minutes: null == e ? void 0 : e.session_duration_minutes
                }, t.next = 4, this._networkClient.fetchSDK({
                  url: "/b2b/sessions/authenticate",
                  body: r,
                  errorMessage: "Error authenticating session",
                  method: "POST"
                });
              case 4:
                return n = t.sent, this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: n.member_session,
                    member: n.member
                  },
                  session_token: n.session_token,
                  session_jwt: n.session_jwt,
                  intermediate_session_token: null
                }), t.abrupt("return", n);
              case 9:
                throw t.prev = 9, t.t0 = t["catch"](0), R.includes(t.t0.error_type) && this._subscriptionService.destroyState(), t.t0;
              case 13:
              case "end":
                return t.stop();
            }
          }, t, this, [[0, 9]]);
        }));
      }, this.exchange = function (e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.sessions.exchange").isString("organization_id", e.organization_id).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale), t.prev = 1, t.next = 4, this._networkClient.fetchSDK({
                  url: "/b2b/sessions/exchange",
                  body: e,
                  errorMessage: "Failed to exchange session",
                  method: "POST"
                });
              case 4:
                return (r = t.sent).member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: r.member_session,
                    member: r.member
                  },
                  session_token: r.session_token,
                  session_jwt: r.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: r.intermediate_session_token
                }), t.abrupt("return", r);
              case 9:
                throw t.prev = 9, t.t0 = t["catch"](1), t.t0;
              case 12:
              case "end":
                return t.stop();
            }
          }, t, this, [[1, 9]]);
        }));
      };
    }
    return s(e, [{
      key: "getTokens",
      value: function value() {
        return this._subscriptionService.getTokens();
      }
    }]), e;
  }(),
  le = s(function e(t, r) {
    var n = this;
    a(this, e), this._networkClient = t, this._subscriptionService = r, this.organizations = {
      list: function list() {
        return S(n, void 0, void 0, i().mark(function e() {
          return i().wrap(function (e) {
            for (;;) switch (e.prev = e.next) {
              case 0:
                return e.t0 = this._networkClient, e.next = 3, this._subscriptionService.getIntermediateSessionToken();
              case 3:
                if (e.t1 = e.sent, e.t1) {
                  e.next = 6;
                  break;
                }
                e.t1 = void 0;
              case 6:
                return e.t2 = e.t1, e.t3 = {
                  intermediate_session_token: e.t2
                }, e.t4 = {
                  url: "/b2b/discovery/organizations",
                  body: e.t3,
                  errorMessage: "Failed to retrieve discovered organizations",
                  method: "POST"
                }, e.abrupt("return", e.t0.fetchSDK.call(e.t0, e.t4));
              case 10:
              case "end":
                return e.stop();
            }
          }, e, this);
        }));
      },
      create: function create(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r, n;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.discovery.organizations.create").isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("organization_name", e.organization_name).isOptionalString("organization_slug", e.organization_slug).isOptionalString("organization_logo_url", e.organization_logo_url).isOptionalString("sso_jit_provisioning", e.sso_jit_provisioning).isOptionalStringArray("email_allowed_domains", e.email_allowed_domains).isOptionalString("email_invites", e.email_invites).isOptionalString("auth_methods", e.auth_methods).isOptionalStringArray("allowed_auth_methods", e.allowed_auth_methods).isOptionalString("mfa_policy", e.mfa_policy), t.t0 = Object, t.t1 = Object.assign({}, e), t.next = 5, this._subscriptionService.getIntermediateSessionToken();
              case 5:
                if (t.t2 = t.sent, t.t2) {
                  t.next = 8;
                  break;
                }
                t.t2 = void 0;
              case 8:
                return t.t3 = t.t2, t.t4 = {
                  intermediate_session_token: t.t3
                }, r = t.t0.assign.call(t.t0, t.t1, t.t4), t.next = 13, this._networkClient.fetchSDK({
                  url: "/b2b/discovery/organizations/create",
                  body: r,
                  errorMessage: "Failed to create organization and member",
                  method: "POST"
                });
              case 13:
                return (n = t.sent).member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: n.member_session,
                    member: n.member
                  },
                  session_token: n.session_token,
                  session_jwt: n.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: n.intermediate_session_token
                }), t.abrupt("return", n);
              case 16:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    }, this.intermediateSessions = {
      exchange: function exchange(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r, n;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.discovery.intermediateSessions.exchange").isString("organization_id", e.organization_id).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale), t.t0 = Object, t.t1 = Object.assign({}, e), t.next = 5, this._subscriptionService.getIntermediateSessionToken();
              case 5:
                if (t.t2 = t.sent, t.t2) {
                  t.next = 8;
                  break;
                }
                t.t2 = void 0;
              case 8:
                return t.t3 = t.t2, t.t4 = {
                  intermediate_session_token: t.t3
                }, r = t.t0.assign.call(t.t0, t.t1, t.t4), t.next = 13, this._networkClient.fetchSDK({
                  url: "/b2b/discovery/intermediate_sessions/exchange",
                  body: r,
                  errorMessage: "Failed to exchange intermediate session",
                  method: "POST"
                });
              case 13:
                return (n = t.sent).member_session ? this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: n.member_session,
                    member: n.member
                  },
                  session_token: n.session_token,
                  session_jwt: n.session_jwt,
                  intermediate_session_token: null
                }) : this._subscriptionService.updateStateAndTokens({
                  state: null,
                  session_token: null,
                  session_jwt: null,
                  intermediate_session_token: n.intermediate_session_token
                }), t.abrupt("return", n);
              case 16:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    };
  });
Promise.resolve({
  pkceRequiredForPasswordResets: !1
});
var de = s(function e(t, r) {
    var n = this,
      o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : te();
    a(this, e), this._networkClient = t, this._subscriptionService = r, this.dfpProtectedAuth = o, this.sms = {
      send: function send(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r, n, o;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.otps.sms.send").isString("organization_id", e.organization_id).isString("member_id", e.member_id).isOptionalString("mfa_phone_number", e.mfa_phone_number).isOptionalString("locale", e.locale), t.next = 3, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
              case 3:
                return r = t.sent, n = r.dfp_telemetry_id, o = r.captcha_token, t.abrupt("return", this._networkClient.retriableFetchSDK({
                  url: "/b2b/otps/sms/send",
                  body: Object.assign(Object.assign({}, e), {
                    dfp_telemetry_id: n,
                    captcha_token: o
                  }),
                  errorMessage: "Failed to send one time passcode",
                  method: "POST",
                  retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                }));
              case 7:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      },
      authenticate: function authenticate(e) {
        return S(n, void 0, void 0, i().mark(function t() {
          var r, n, o, s, a;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                return Q("stytch.otps.sms.authenticate").isString("organization_id", e.organization_id).isString("member_id", e.member_id).isString("code", e.code).isOptionalString("set_mfa_enrollment", e.set_mfa_enrollment), t.next = 3, this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
              case 3:
                return r = t.sent, n = r.dfp_telemetry_id, o = r.captcha_token, t.t0 = Object, t.t1 = Object.assign({}, e), t.t2 = n, t.t3 = o, t.next = 12, this._subscriptionService.getIntermediateSessionToken();
              case 12:
                if (t.t4 = t.sent, t.t4) {
                  t.next = 15;
                  break;
                }
                t.t4 = void 0;
              case 15:
                return t.t5 = t.t4, t.t6 = {
                  dfp_telemetry_id: t.t2,
                  captcha_token: t.t3,
                  intermediate_session_token: t.t5
                }, s = t.t0.assign.call(t.t0, t.t1, t.t6), t.next = 20, this._networkClient.retriableFetchSDK({
                  url: "/b2b/otps/sms/authenticate",
                  body: s,
                  errorMessage: "Failed to authenticate one time passcode",
                  method: "POST",
                  retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
                });
              case 20:
                return a = t.sent, this._subscriptionService.updateStateAndTokens({
                  state: {
                    session: a.member_session,
                    member: a.member
                  },
                  session_token: a.session_token,
                  session_jwt: a.session_jwt,
                  intermediate_session_token: null
                }), t.abrupt("return", a);
              case 23:
              case "end":
                return t.stop();
            }
          }, t, this);
        }));
      }
    };
  }),
  he = function () {
    function e(t, r, n) {
      var i = this;
      a(this, e), this._subscriptionService = n, this.isAuthorizedSync = function (e, t) {
        var r;
        return !!(null === (r = i.cachedPolicy) || void 0 === r ? void 0 : r.callerIsAuthorized(i.roleIds(), e, t));
      }, this.isAuthorized = function (e, t) {
        return i.policyPromise.then(function (r) {
          return r.callerIsAuthorized(i.roleIds(), e, t);
        });
      }, this.cachedPolicy = t.rbacPolicy ? Ee.fromJSON(t.rbacPolicy) : null, this.policyPromise = r.then(function (e) {
        return e.rbacPolicy ? (i.cachedPolicy = Ee.fromJSON(e.rbacPolicy), i.cachedPolicy) : ($("Unable to retrieve RBAC policy from servers. Assuming caller has no permissions."), new Ee([], []));
      });
    }
    return s(e, [{
      key: "allPermissions",
      value: function value() {
        var e = this;
        return this.policyPromise.then(function (t) {
          return t.allPermissionsForCaller(e.roleIds());
        });
      }
    }, {
      key: "roleIds",
      value: function value() {
        var e,
          t = this._subscriptionService.getSession();
        return t && null !== (e = t.roles) && void 0 !== e ? e : [];
      }
    }]), e;
  }(),
  pe = function () {
    function e(t, r) {
      var n = this;
      a(this, e), this._subscriptionService = t, this._headlessSessionClient = r, this._onDataChange = function (e) {
        (null == e ? void 0 : e.session) ? n.scheduleBackgroundRefresh() : n.cancelBackgroundRefresh();
      }, this._reauthenticateWithBackoff = function () {
        return S(n, void 0, void 0, i().mark(function t() {
          var r;
          return i().wrap(function (t) {
            for (;;) switch (t.prev = t.next) {
              case 0:
                r = 0;
              case 1:
                return t.prev = 2, t.next = 5, this._headlessSessionClient.authenticate();
              case 5:
                return t.abrupt("return", t.sent);
              case 8:
                if (t.prev = 8, t.t0 = t["catch"](2), !e.isUnrecoverableError(t.t0)) {
                  t.next = 12;
                  break;
                }
                return t.abrupt("return", Promise.reject(t.t0));
              case 12:
                return r++, t.next = 15, new Promise(function (t) {
                  return setTimeout(t, e.timeoutForAttempt(r));
                });
              case 15:
                t.next = 1;
                break;
              case 17:
              case "end":
                return t.stop();
            }
          }, t, this, [[2, 8]]);
        }));
      }, this.timeout = null, this._subscriptionService.subscribeToState(this._onDataChange);
    }
    return s(e, [{
      key: "performBackgroundRefresh",
      value: function value() {
        var e = this;
        this._reauthenticateWithBackoff().then(function () {
          e.scheduleBackgroundRefresh();
        })["catch"](function (t) {
          J("Session background refresh failed. Signalling to app that user is logged out.", {
            error: t
          }), e._subscriptionService.destroyState();
        });
      }
    }, {
      key: "scheduleBackgroundRefresh",
      value: function value() {
        var t = this;
        this.cancelBackgroundRefresh(), this.timeout = setTimeout(function () {
          t.performBackgroundRefresh();
        }, e.REFRESH_INTERVAL_MS);
      }
    }, {
      key: "cancelBackgroundRefresh",
      value: function value() {
        null !== this.timeout && (clearTimeout(this.timeout), this.timeout = null);
      }
    }], [{
      key: "timeoutForAttempt",
      value: function value(e) {
        return e = Math.min(e, 7), Math.floor(350 * Math.random()) - 175 + 2e3 * Math.pow(2, e);
      }
    }, {
      key: "isUnrecoverableError",
      value: function value(e) {
        return R.includes(e.error_type);
      }
    }]), e;
  }();
pe.REFRESH_INTERVAL_MS = 18e4;
var _e,
  fe,
  me,
  ve,
  be,
  ge,
  ye,
  ke,
  Se,
  we,
  Ae,
  Ee = function () {
    function e(t, r) {
      var n = this;
      a(this, e), this.roles = t, this.resources = r, this.rolesByID = {}, t.forEach(function (e) {
        return n.rolesByID[e.role_id] = e;
      });
    }
    return s(e, [{
      key: "callerIsAuthorized",
      value: function value(e, t, r) {
        var n = this;
        return !!e.map(function (e) {
          return n.rolesByID[e];
        }).filter(function (e) {
          return e;
        }).flatMap(function (e) {
          return e.permissions;
        }).filter(function (e) {
          return e.resource_id === t;
        }).find(function (e) {
          return e.actions.includes(r) || e.actions.includes("*");
        });
      }
    }, {
      key: "allPermissionsForCaller",
      value: function value(e) {
        var t = this,
          r = {};
        return this.resources.forEach(function (n) {
          r[n.resource_id] = {}, n.actions.forEach(function (i) {
            r[n.resource_id][i] = t.callerIsAuthorized(e, n.resource_id, i);
          });
        }), r;
      }
    }], [{
      key: "fromJSON",
      value: function value(t) {
        return new e(t.roles, t.resources);
      }
    }]), e;
  }();
function Te(e, t, r, n) {
  return new (r || (r = Promise))(function (i, o) {
    function s(e) {
      try {
        c(n.next(e));
      } catch (e) {
        o(e);
      }
    }
    function a(e) {
      try {
        c(n["throw"](e));
      } catch (e) {
        o(e);
      }
    }
    function c(e) {
      var t;
      e.done ? i(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {
        e(t);
      })).then(s, a);
    }
    c((n = n.apply(e, t || [])).next());
  });
}
"function" == typeof SuppressedError && SuppressedError, function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.oauth = "oauth", e.otp = "otp", e.crypto = "crypto", e.passwords = "passwords", e.passkeys = "passkeys";
}(_e || (_e = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft", e.Apple = "apple", e.Github = "github", e.GitLab = "gitlab", e.Facebook = "facebook", e.Discord = "discord", e.Salesforce = "salesforce", e.Slack = "slack", e.Amazon = "amazon", e.Bitbucket = "bitbucket", e.LinkedIn = "linkedin", e.Coinbase = "coinbase", e.Twitch = "twitch", e.Twitter = "twitter", e.TikTok = "tiktok", e.Snapchat = "snapchat", e.Figma = "figma", e.Yahoo = "yahoo";
}(fe || (fe = {})), function (e) {
  e.Vessel = "Vessel", e.Phantom = "Phantom", e.Metamask = "Metamask", e.Coinbase = "Coinbase", e.Binance = "Binance", e.GenericEthereumWallet = "Other Ethereum Wallet", e.GenericSolanaWallet = "Other Solana Wallet";
}(me || (me = {})), function (e) {
  e.embedded = "embedded", e.floating = "floating";
}(ve || (ve = {})), function (e) {
  e.SMS = "sms", e.WhatsApp = "whatsapp", e.Email = "email";
}(be || (be = {})), function (e) {
  e.MagicLinkLoginOrCreateEvent = "MAGIC_LINK_LOGIN_OR_CREATE", e.OTPsLoginOrCreateEvent = "OTP_LOGIN_OR_CREATE", e.OTPsAuthenticate = "OTP_AUTHENTICATE", e.CryptoWalletAuthenticateStart = "CRYPTO_WALLET_AUTHENTICATE_START", e.CryptoWalletAuthenticate = "CRYPTO_WALLET_AUTHENTICATE", e.PasswordCreate = "PASSWORD_CREATE", e.PasswordAuthenticate = "PASSWORD_AUTHENTICATE", e.PasswordResetByEmailStart = "PASSWORD_RESET_BY_EMAIL_START", e.PasswordResetByEmail = "PASSWORD_RESET_BY_EMAIL", e.PasskeyRegister = "PASSKEY_REGISTER", e.PasskeyAuthenticate = "PASSKEY_AUTHENTICATE", e.PasskeySkip = "PASSKEY_SKIP", e.PasskeyDone = "PASSKEY_DONE", e.B2BMagicLinkEmailLoginOrSignup = "B2B_MAGIC_LINK_EMAIL_LOGIN_OR_SIGNUP", e.B2BMagicLinkAuthenticate = "B2B_MAGIC_LINK_AUTHENTICATE", e.B2BMagicLinkEmailDiscoverySend = "B2B_MAGIC_LINK_EMAIL_DISCOVERY_SEND", e.B2BMagicLinkDiscoveryAuthenticate = "B2B_MAGIC_LINK_DISCOVERY_AUTHENTICATE", e.B2BSSOStart = "B2B_SSO_START", e.B2BSSOAuthenticate = "B2B_SSO_AUTHENTICATE", e.B2BOAuthAuthenticate = "B2B_OAUTH_AUTHENTICATE", e.B2BOAuthDiscoveryAuthenticate = "B2B_OAUTH_DISCOVERY_AUTHENTICATE", e.B2BDiscoveryOrganizationsCreate = "B2B_DISCOVERY_ORGANIZATIONS_CREATE", e.B2BDiscoveryIntermediateSessionExchange = "B2B_DISCOVERY_INTERMEDIATE_SESSION_EXCHANGE", e.B2BPasswordAuthenticate = "B2B_PASSWORD_AUTHENTICATE", e.B2BPasswordResetByEmailStart = "B2B_PASSWORD_RESET_BY_EMAIL_START", e.B2BPasswordResetByEmail = "B2B_PASSWORD_RESET_BY_EMAIL", e.B2BPasswordResetBySession = "B2B_PASSWORD_RESET_BY_SESSION";
}(ge || (ge = {}));
var Pe = /*#__PURE__*/function (_Error) {
  _inherits(Pe, _Error);
  var _super = _createSuper(Pe);
  function Pe(e, t) {
    var _this;
    _classCallCheck(this, Pe);
    _this = _super.call(this), _this.name = "StytchSDKUsageError", _this.message = "Invalid call to ".concat(e, "\n") + t;
    return _this;
  }
  return _createClass(Pe);
}( /*#__PURE__*/_wrapNativeSuper(Error));
!function (e) {
  e.BiometricsSensorError = "biometrics_sensor_error", e.DeviceCredentialsNotAllowed = "device_credentials_not_allowed", e.DeviceHardwareError = "device_hardware_error", e.InternalError = "internal_error", e.KeyInvalidated = "key_invalidated", e.KeystoreUnavailable = "keystore_unavailable", e.NoBiometricsEnrolled = "no_biometrics_enrolled", e.NoBiometricsRegistration = "no_biometrics_registration", e.SessionExpired = "session_expired", e.UserCancellation = "user_cancellation", e.UserLockedOut = "user_locked_out", e.BiometricsNotAvailable = "biometrics_not_available";
}(ye || (ye = {})), function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.sso = "sso", e.passwords = "passwords", e.oauth = "oauth";
}(ke || (ke = {})), function (e) {
  e.Discovery = "Discovery", e.Organization = "Organization", e.PasswordReset = "PasswordReset";
}(Se || (Se = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft";
}(we || (we = {})), function (e) {
  e.RequiredCatcha = "Catcha Required";
}(Ae || (Ae = {}));
var Ce = function Ce(e) {
  var t = {
    isObject: function isObject(r, n) {
      if (!("object" == _typeof(n) && !Array.isArray(n) && null !== n)) throw new Pe(e, r + " must be an object.");
      return t;
    },
    isOptionalObject: function isOptionalObject(e, r) {
      return void 0 === r ? t : t.isObject(e, r);
    },
    isString: function isString(r, n) {
      if ("string" != typeof n) throw new Pe(e, r + " must be a string.");
      return t;
    },
    isOptionalString: function isOptionalString(e, r) {
      return void 0 === r ? t : t.isString(e, r);
    },
    isStringArray: function isStringArray(r, n) {
      if (!Array.isArray(n)) throw new Pe(e, r + " must be an array of strings.");
      var _iterator = _createForOfIteratorHelper(n),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _t2 = _step.value;
          if ("string" != typeof _t2) throw new Pe(e, r + " must be an array of strings.");
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      return t;
    },
    isOptionalStringArray: function isOptionalStringArray(e, r) {
      return void 0 === r ? t : t.isStringArray(e, r);
    },
    isNumber: function isNumber(r, n) {
      if ("number" != typeof n) throw new Pe(e, r + " must be a number.");
      return t;
    },
    isOptionalNumber: function isOptionalNumber(e, r) {
      return void 0 === r ? t : t.isNumber(e, r);
    },
    isBoolean: function isBoolean(r, n) {
      if ("boolean" != typeof n) throw new Pe(e, r + " must be a boolean.");
      return t;
    },
    isOptionalBoolean: function isOptionalBoolean(e, r) {
      return void 0 === r ? t : t.isBoolean(e, r);
    }
  };
  return t;
};
var Oe;
!function (e) {
  e.LoginOrCreateEML = "login_or_create_eml", e.LoginOrCreateOTP = "login_or_create_otp", e.ResetPassword = "reset_password";
}(Oe || (Oe = {})), Promise.resolve({
  pkceRequiredForEmailMagicLinks: !1
}), Promise.resolve({
  pkceRequiredForPasswordResets: !1
}), Promise.resolve({
  pkceRequiredForEmailMagicLinks: !1
});
var xe = Promise.resolve({
  pkceRequiredForPasswordResets: !1
});
var Be = /*#__PURE__*/function () {
  function Be(e, t, r) {
    var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : xe;
    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {
      return {
        isEnabled: function isEnabled() {
          return Te(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  return _context.abrupt("return", !1);
                case 1:
                case "end":
                  return _context.stop();
              }
            }, _callee);
          }));
        },
        getTelemetryID: function getTelemetryID() {
          return Te(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
        },
        getDFPTelemetryIDAndCaptcha: function getDFPTelemetryIDAndCaptcha() {
          return Te(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) switch (_context3.prev = _context3.next) {
                case 0:
                  return _context3.abrupt("return", {
                    dfp_telemetry_id: void 0,
                    captcha_token: void 0
                  });
                case 1:
                case "end":
                  return _context3.stop();
              }
            }, _callee3);
          }));
        },
        retryWithCaptchaAndDFP: function retryWithCaptchaAndDFP() {
          return Te(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
              while (1) switch (_context4.prev = _context4.next) {
                case 0:
                  throw new Error("DFP protected auth is disabled");
                case 1:
                case "end":
                  return _context4.stop();
              }
            }, _callee4);
          }));
        }
      };
    }();
    _classCallCheck(this, Be);
    this._networkClient = e, this._subscriptionService = t, this._pkceManager = r, this._config = n, this.dfpProtectedAuth = i;
  }
  _createClass(Be, [{
    key: "getCodeChallenge",
    value: function getCodeChallenge() {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
        var _yield$this$_config, e, t;
        return _regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.next = 2;
              return this._config;
            case 2:
              _yield$this$_config = _context5.sent;
              e = _yield$this$_config.pkceRequiredForPasswordResets;
              if (e) {
                _context5.next = 6;
                break;
              }
              return _context5.abrupt("return");
            case 6:
              _context5.next = 8;
              return this._pkceManager.getPKPair();
            case 8:
              t = _context5.sent;
              _context5.t0 = t;
              if (_context5.t0) {
                _context5.next = 14;
                break;
              }
              _context5.next = 13;
              return this._pkceManager.startPKCETransaction();
            case 13:
              t = _context5.sent;
            case 14:
              return _context5.abrupt("return", t.code_challenge);
            case 15:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "authenticate",
    value: function authenticate(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
        var t, r, _yield$this$dfpProtec, n, i, o;
        return _regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              Ce("stytch.passwords.authenticate").isString("org_id", e.organization_id).isString("password", e.password).isString("email_address", e.email_address).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale);
              _context6.next = 3;
              return this._pkceManager.getPKPair();
            case 3:
              t = _context6.sent;
              r = null == t ? void 0 : t.code_verifier;
              _context6.next = 7;
              return this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
            case 7:
              _yield$this$dfpProtec = _context6.sent;
              n = _yield$this$dfpProtec.dfp_telemetry_id;
              i = _yield$this$dfpProtec.captcha_token;
              _context6.next = 12;
              return this._networkClient.retriableFetchSDK({
                url: "/b2b/passwords/authenticate",
                method: "POST",
                errorMessage: "Failed to authenticate password.",
                body: {
                  organization_id: e.organization_id,
                  email_address: e.email_address,
                  password: e.password,
                  session_duration_minutes: e.session_duration_minutes,
                  locale: e.locale,
                  captcha_token: i,
                  dfp_telemetry_id: n,
                  code_verifier: r
                },
                retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
              });
            case 12:
              o = _context6.sent;
              return _context6.abrupt("return", (o.member_session ? this._subscriptionService.updateStateAndTokens({
                state: {
                  session: o.member_session,
                  member: o.member
                },
                session_token: o.session_token,
                session_jwt: o.session_jwt,
                intermediate_session_token: null
              }) : this._subscriptionService.updateStateAndTokens({
                state: null,
                session_token: null,
                session_jwt: null,
                intermediate_session_token: o.intermediate_session_token
              }), o));
            case 14:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
    }
  }, {
    key: "resetByEmailStart",
    value: function resetByEmailStart(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {
        var t, _yield$this$dfpProtec2, r, n;
        return _regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              Ce("stytch.passwords.resetByEmailStart").isString("email", e.email_address).isOptionalString("login_redirect_url", e.login_redirect_url).isOptionalString("reset_password_redirect_url", e.reset_password_redirect_url).isOptionalString("reset_password_template_id", e.reset_password_template_id).isOptionalNumber("reset_password_expiration_minutes", e.reset_password_expiration_minutes);
              _context7.next = 3;
              return this.getCodeChallenge();
            case 3:
              t = _context7.sent;
              _context7.next = 6;
              return this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
            case 6:
              _yield$this$dfpProtec2 = _context7.sent;
              r = _yield$this$dfpProtec2.dfp_telemetry_id;
              n = _yield$this$dfpProtec2.captcha_token;
              return _context7.abrupt("return", this._networkClient.retriableFetchSDK({
                url: "/b2b/passwords/email/reset/start",
                method: "POST",
                errorMessage: "Failed to start password reset flow.",
                body: {
                  organization_id: e.organization_id,
                  email_address: e.email_address,
                  login_redirect_url: e.login_redirect_url,
                  reset_password_redirect_url: e.reset_password_redirect_url,
                  reset_password_expiration_minutes: e.reset_password_expiration_minutes,
                  reset_password_template_id: e.reset_password_template_id,
                  code_challenge: t,
                  captcha_token: n,
                  dfp_telemetry_id: r
                },
                retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
              }));
            case 10:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
    }
  }, {
    key: "resetByEmail",
    value: function resetByEmail(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
        var _yield$this$dfpProtec3, t, r, n, i, o;
        return _regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              Ce("stytch.passwords.resetByEmail").isString("password_reset_token", e.password_reset_token).isString("password", e.password).isNumber("session_duration_minutes", e.session_duration_minutes).isOptionalString("locale", e.locale);
              _context8.next = 3;
              return this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
            case 3:
              _yield$this$dfpProtec3 = _context8.sent;
              t = _yield$this$dfpProtec3.dfp_telemetry_id;
              r = _yield$this$dfpProtec3.captcha_token;
              _context8.next = 8;
              return this._pkceManager.getPKPair();
            case 8:
              n = _context8.sent;
              i = null == n ? void 0 : n.code_verifier;
              _context8.next = 12;
              return this._networkClient.retriableFetchSDK({
                url: "/b2b/passwords/email/reset",
                method: "POST",
                errorMessage: "Failed to reset password.",
                body: {
                  password_reset_token: e.password_reset_token,
                  password: e.password,
                  session_duration_minutes: e.session_duration_minutes,
                  locale: e.locale,
                  captcha_token: r,
                  dfp_telemetry_id: t,
                  code_verifier: i
                },
                retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
              });
            case 12:
              o = _context8.sent;
              return _context8.abrupt("return", (this._pkceManager.clearPKPair(), o.member_session ? this._subscriptionService.updateStateAndTokens({
                state: {
                  session: o.member_session,
                  member: o.member
                },
                session_token: o.session_token,
                session_jwt: o.session_jwt,
                intermediate_session_token: null
              }) : this._subscriptionService.updateStateAndTokens({
                state: null,
                session_token: null,
                session_jwt: null,
                intermediate_session_token: o.intermediate_session_token
              }), o));
            case 14:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this);
      }));
    }
  }, {
    key: "resetByExistingPassword",
    value: function resetByExistingPassword(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {
        var _yield$this$dfpProtec4, t, r, n;
        return _regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              Ce("stytch.passwords.resetByExistingPassword").isString("email", e.email_address).isString("existing_password", e.existing_password).isString("new_password", e.new_password).isOptionalString("locale", e.locale);
              _context9.next = 3;
              return this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
            case 3:
              _yield$this$dfpProtec4 = _context9.sent;
              t = _yield$this$dfpProtec4.dfp_telemetry_id;
              r = _yield$this$dfpProtec4.captcha_token;
              _context9.next = 8;
              return this._networkClient.retriableFetchSDK({
                url: "/b2b/passwords/existing_password/reset",
                method: "POST",
                errorMessage: "Failed to reset password.",
                body: {
                  organization_id: e.organization_id,
                  email_address: e.email_address,
                  existing_password: e.existing_password,
                  new_password: e.new_password,
                  locale: e.locale,
                  captcha_token: r,
                  dfp_telemetry_id: t
                },
                retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
              });
            case 8:
              n = _context9.sent;
              return _context9.abrupt("return", (n.member_session ? this._subscriptionService.updateStateAndTokens({
                state: {
                  session: n.member_session,
                  member: n.member
                },
                session_token: n.session_token,
                session_jwt: n.session_jwt,
                intermediate_session_token: null
              }) : this._subscriptionService.updateStateAndTokens({
                state: null,
                session_token: null,
                session_jwt: null,
                intermediate_session_token: n.intermediate_session_token
              }), n));
            case 10:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this);
      }));
    }
  }, {
    key: "resetBySession",
    value: function resetBySession(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {
        var _yield$this$dfpProtec5, t, r, n;
        return _regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              Ce("stytch.passwords.resetBySession").isString("password", e.password);
              _context10.next = 3;
              return this.dfpProtectedAuth.getDFPTelemetryIDAndCaptcha();
            case 3:
              _yield$this$dfpProtec5 = _context10.sent;
              t = _yield$this$dfpProtec5.dfp_telemetry_id;
              r = _yield$this$dfpProtec5.captcha_token;
              _context10.next = 8;
              return this._networkClient.retriableFetchSDK({
                url: "/b2b/passwords/session/reset",
                method: "POST",
                errorMessage: "Failed to reset by session.",
                body: {
                  password: e.password,
                  captcha_token: r,
                  dfp_telemetry_id: t
                },
                retryCallback: this.dfpProtectedAuth.retryWithCaptchaAndDFP
              });
            case 8:
              n = _context10.sent;
              return _context10.abrupt("return", (this._subscriptionService.updateStateAndTokens({
                state: {
                  session: n.member_session,
                  member: n.member
                },
                session_token: n.session_token,
                session_jwt: n.session_jwt,
                intermediate_session_token: null
              }), n));
            case 10:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this);
      }));
    }
  }, {
    key: "strengthCheck",
    value: function strengthCheck(e) {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {
        return _regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              return _context11.abrupt("return", (Ce("stytch.passwords.strengthCheck").isOptionalString("email", e.email_address).isString("password", e.password), this._networkClient.fetchSDK({
                url: "/b2b/passwords/strength_check",
                method: "POST",
                errorMessage: "Failed to check password strength.",
                body: {
                  email_address: e.email_address,
                  password: e.password
                }
              })));
            case 1:
            case "end":
              return _context11.stop();
          }
        }, _callee11, this);
      }));
    }
  }]);
  return Be;
}();
var Re = "bootstrap";
var De = /*#__PURE__*/function () {
  function De(e, t, r) {
    var _this2 = this;
    _classCallCheck(this, De);
    this._publicToken = e, this._networkClient = t, this._dataLayer = r, this._bootstrapDataPromise = this._networkClient.fetchSDK({
      url: "/projects/bootstrap/".concat(this._publicToken),
      method: "GET",
      errorMessage: "Error fetching bootstrap data for SDK for ".concat(this._publicToken)
    }).then(De.mapBootstrapData).then(function (e) {
      return _this2._dataLayer.setItem(Re, JSON.stringify(e)), e;
    })["catch"](function (e) {
      return $(e), {
        displayWatermark: !1,
        cnameDomain: null,
        emailDomains: ["stytch.com"],
        captchaSettings: {
          enabled: !1
        },
        pkceRequiredForEmailMagicLinks: !1,
        pkceRequiredForPasswordResets: !1,
        pkceRequiredForOAuth: !1,
        pkceRequiredForSso: !1,
        slugPattern: null,
        createOrganizationEnabled: !1,
        passwordConfig: null,
        runDFPProtectedAuth: !1,
        rbacPolicy: null
      };
    });
  }
  _createClass(De, [{
    key: "getSync",
    value: function getSync() {
      var e = this._dataLayer.getItem(Re);
      if (null === e) return {
        displayWatermark: !1,
        cnameDomain: null,
        emailDomains: ["stytch.com"],
        captchaSettings: {
          enabled: !1
        },
        pkceRequiredForEmailMagicLinks: !1,
        pkceRequiredForPasswordResets: !1,
        pkceRequiredForOAuth: !1,
        pkceRequiredForSso: !1,
        slugPattern: null,
        createOrganizationEnabled: !1,
        passwordConfig: null,
        runDFPProtectedAuth: !1,
        rbacPolicy: null
      };
      try {
        return JSON.parse(e);
      } catch (e) {
        return {
          displayWatermark: !1,
          cnameDomain: null,
          emailDomains: ["stytch.com"],
          captchaSettings: {
            enabled: !1
          },
          pkceRequiredForEmailMagicLinks: !1,
          pkceRequiredForPasswordResets: !1,
          pkceRequiredForOAuth: !1,
          pkceRequiredForSso: !1,
          slugPattern: null,
          createOrganizationEnabled: !1,
          passwordConfig: null,
          runDFPProtectedAuth: !1,
          rbacPolicy: null
        };
      }
    }
  }, {
    key: "getAsync",
    value: function getAsync() {
      return this._bootstrapDataPromise;
    }
  }], [{
    key: "mapBootstrapData",
    value: function mapBootstrapData(e) {
      var t, r;
      var n = null !== e.password_config ? {
        ludsComplexity: e.password_config.luds_complexity,
        ludsMinimumCount: e.password_config.luds_minimum_count
      } : null;
      return {
        displayWatermark: !e.disable_sdk_watermark,
        captchaSettings: e.captcha_settings,
        cnameDomain: e.cname_domain,
        emailDomains: e.email_domains,
        pkceRequiredForEmailMagicLinks: e.pkce_required_for_email_magic_links,
        pkceRequiredForPasswordResets: e.pkce_required_for_password_resets,
        pkceRequiredForOAuth: e.pkce_required_for_oauth,
        pkceRequiredForSso: e.pkce_required_for_sso,
        slugPattern: e.slug_pattern,
        createOrganizationEnabled: e.create_organization_enabled,
        passwordConfig: n,
        runDFPProtectedAuth: null !== (t = e.dfp_protected_auth_enabled) && void 0 !== t && t,
        dfpProtectedAuthMode: e.dfp_protected_auth_mode,
        rbacPolicy: null !== (r = e.rbac_policy) && void 0 !== r ? r : null
      };
    }
  }]);
  return De;
}();
var Ie = /*#__PURE__*/_createClass(function Ie(e) {
  var _this3 = this;
  _classCallCheck(this, Ie);
  this.bootstrapPromise = e, this.executeRecaptcha = function () {
    return Te(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee12() {
      var _yield$this$state, e, t, r;
      return _regeneratorRuntime().wrap(function _callee12$(_context12) {
        while (1) switch (_context12.prev = _context12.next) {
          case 0:
            _context12.next = 2;
            return this.state;
          case 2:
            _yield$this$state = _context12.sent;
            e = _yield$this$state.captchaClient;
            t = _yield$this$state.configured;
            r = _yield$this$state.siteKey;
            if (!t) {
              _context12.next = 10;
              break;
            }
            _context12.next = 9;
            return new Promise(function (t) {
              return e.ready(t);
            });
          case 9:
            return _context12.abrupt("return", e.execute(r, {
              action: "LOGIN"
            }));
          case 10:
          case "end":
            return _context12.stop();
        }
      }, _callee12, this);
    }));
  }, this.state = e.then(function (e) {
    return Te(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee13() {
      var t;
      return _regeneratorRuntime().wrap(function _callee13$(_context13) {
        while (1) switch (_context13.prev = _context13.next) {
          case 0:
            if (!e.captchaSettings.enabled) {
              _context13.next = 9;
              break;
            }
            _context13.t1 = !0;
            _context13.next = 4;
            return t = e.captchaSettings.siteKey, H("https://www.google.com/recaptcha/enterprise.js?render=".concat(t), function () {
              return window.grecaptcha.enterprise;
            });
          case 4:
            _context13.t2 = _context13.sent;
            _context13.t3 = e.captchaSettings.siteKey;
            _context13.t0 = {
              configured: _context13.t1,
              captchaClient: _context13.t2,
              siteKey: _context13.t3
            };
            _context13.next = 10;
            break;
          case 9:
            _context13.t0 = {
              configured: !1
            };
          case 10:
            return _context13.abrupt("return", _context13.t0);
          case 11:
          case "end":
            return _context13.stop();
        }
      }, _callee13);
    }));
  });
});
var Le = /*#__PURE__*/function () {
  function Le(e, t, r, n) {
    _classCallCheck(this, Le);
    this._publicToken = e, this._subscriptionDataLayer = t, this.baseURL = r, this.additionalTelemetryDataFn = n, this.updateSessionToken = function () {
      return null;
    }, this.eventLogger = new re({
      maxBatchSize: 15,
      intervalDurationMs: 800,
      logEventURL: this.buildSDKUrl("/events")
    });
  }
  _createClass(Le, [{
    key: "logEvent",
    value: function logEvent(_ref) {
      var e = _ref.name,
        t = _ref.details,
        _ref$error = _ref.error,
        r = _ref$error === void 0 ? {} : _ref$error;
      this.eventLogger.logEvent(this.createTelemetryBlob(), {
        public_token: this._publicToken,
        event_name: e,
        details: t,
        error_code: r.error_code,
        error_description: r.error_description,
        http_status_code: r.http_status_code
      });
    }
  }, {
    key: "createTelemetryBlob",
    value: function createTelemetryBlob() {
      return Object.assign(Object.assign({
        event_id: "event-id-".concat(z()),
        app_session_id: "app-session-id-".concat(z()),
        persistent_id: "persistent-id-".concat(z()),
        client_sent_at: new Date().toISOString(),
        timezone: Intl.DateTimeFormat().resolvedOptions().timeZone
      }, this.additionalTelemetryDataFn()), {
        app: {
          identifier: window.location.hostname
        },
        sdk: {
          identifier: "Stytch.js Javascript SDK",
          version: "3.3.0"
        }
      });
    }
  }, {
    key: "fetchSDK",
    value: function fetchSDK(_ref2) {
      var e = _ref2.url,
        t = _ref2.body,
        r = _ref2.errorMessage,
        n = _ref2.method;
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
        var i, o, s, a;
        return _regeneratorRuntime().wrap(function _callee14$(_context14) {
          while (1) switch (_context14.prev = _context14.next) {
            case 0:
              i = this._subscriptionDataLayer.readSessionCookie().session_token, o = "Basic " + window.btoa(this._publicToken + ":" + (i || this._publicToken)), s = window.btoa(JSON.stringify(this.createTelemetryBlob())), a = window.location.origin;
              return _context14.abrupt("return", L({
                basicAuthHeader: o,
                body: t,
                errorMessage: r,
                finalURL: this.buildSDKUrl(e),
                method: n,
                xSDKClientHeader: s,
                xSDKParentHostHeader: a
              }));
            case 2:
            case "end":
              return _context14.stop();
          }
        }, _callee14, this);
      }));
    }
  }, {
    key: "retriableFetchSDK",
    value: function retriableFetchSDK(_ref3) {
      var e = _ref3.url,
        t = _ref3.body,
        r = _ref3.errorMessage,
        n = _ref3.method,
        o = _ref3.retryCallback;
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee15() {
        var s, a, c, u;
        return _regeneratorRuntime().wrap(function _callee15$(_context15) {
          while (1) switch (_context15.prev = _context15.next) {
            case 0:
              s = this._subscriptionDataLayer.readSessionCookie().session_token, a = "Basic " + window.btoa(this._publicToken + ":" + (s || this._publicToken)), c = window.btoa(JSON.stringify(this.createTelemetryBlob())), u = window.location.origin;
              return _context15.abrupt("return", function (e) {
                var t = e.method,
                  r = e.errorMessage,
                  n = e.finalURL,
                  o = e.basicAuthHeader,
                  s = e.xSDKClientHeader,
                  a = e.xSDKParentHostHeader,
                  c = e.body,
                  u = e.retryCallback;
                return S(this, void 0, void 0, i().mark(function e() {
                  var l;
                  return i().wrap(function (e) {
                    for (;;) switch (e.prev = e.next) {
                      case 0:
                        return l = {
                          method: t,
                          errorMessage: r,
                          finalURL: n,
                          basicAuthHeader: o,
                          xSDKClientHeader: s,
                          xSDKParentHostHeader: a,
                          body: c
                        }, e.prev = 1, e.next = 4, L(l);
                      case 4:
                      case 15:
                        return e.abrupt("return", e.sent);
                      case 7:
                        if (e.prev = 7, e.t0 = e["catch"](1), !(e.t0 instanceof I)) {
                          e.next = 16;
                          break;
                        }
                        return e.next = 12, u(e.t0, l);
                      case 12:
                        return l = e.sent, e.next = 15, L(l);
                      case 16:
                        throw e.t0;
                      case 17:
                      case "end":
                        return e.stop();
                    }
                  }, e, null, [[1, 7]]);
                }));
              }({
                basicAuthHeader: a,
                body: t,
                errorMessage: r,
                finalURL: this.buildSDKUrl(e),
                method: n,
                xSDKClientHeader: c,
                xSDKParentHostHeader: u,
                retryCallback: o
              }));
            case 2:
            case "end":
              return _context15.stop();
          }
        }, _callee15, this);
      }));
    }
  }, {
    key: "buildSDKUrl",
    value: function buildSDKUrl(e) {
      return "".concat(this.baseURL, "/sdk/v1").concat(e);
    }
  }]);
  return Le;
}();
function Me(e) {
  var t = e.toString(16);
  return 1 === t.length && (t = "0" + t), t;
}
var Ne = /*#__PURE__*/function () {
  function Ne(e, t) {
    _classCallCheck(this, Ne);
    this._dataLayer = e, this.namespace = t;
  }
  _createClass(Ne, [{
    key: "key",
    value: function key() {
      return "PKCE_VERIFIER:" + this.namespace;
    }
  }, {
    key: "startPKCETransaction",
    value: function startPKCETransaction() {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {
        var e;
        return _regeneratorRuntime().wrap(function _callee16$(_context16) {
          while (1) switch (_context16.prev = _context16.next) {
            case 0:
              _context16.next = 2;
              return Ne.createProofkeyPair();
            case 2:
              e = _context16.sent;
              return _context16.abrupt("return", (this._dataLayer.setItem(this.key(), JSON.stringify(e)), e));
            case 4:
            case "end":
              return _context16.stop();
          }
        }, _callee16, this);
      }));
    }
  }, {
    key: "getPKPair",
    value: function getPKPair() {
      var e = this._dataLayer.getItem(this.key());
      if (null !== e) try {
        return JSON.parse(e);
      } catch (e) {
        return void J("Found malformed Proof Key pair in localstorage.");
      }
    }
  }, {
    key: "clearPKPair",
    value: function clearPKPair() {
      return this._dataLayer.removeItem(this.key());
    }
  }], [{
    key: "createProofkeyPair",
    value: function createProofkeyPair() {
      return Te(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {
        var _String$fromCharCode;
        var e, t, r, n;
        return _regeneratorRuntime().wrap(function _callee17$(_context17) {
          while (1) switch (_context17.prev = _context17.next) {
            case 0:
              e = new Uint32Array(16);
              window.crypto.getRandomValues(e);
              t = Array.from(e).map(Me).join("");
              _context17.next = 5;
              return window.crypto.subtle.digest("SHA-256", new TextEncoder().encode(t));
            case 5:
              r = _context17.sent;
              return _context17.abrupt("return", {
                code_challenge: (n = r, btoa((_String$fromCharCode = String.fromCharCode).call.apply(_String$fromCharCode, [null].concat(_toConsumableArray(new Uint8Array(n))))).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "")),
                code_verifier: t
              });
            case 7:
            case "end":
              return _context17.stop();
          }
        }, _callee17);
      }));
    }
  }]);
  return Ne;
}();
var je = /*#__PURE__*/function () {
  function je(e) {
    _classCallCheck(this, je);
    this._networkClient = e;
  }
  _createClass(je, [{
    key: "searchUser",
    value: function searchUser(e) {
      return this._networkClient.fetchSDK({
        url: "/users/search",
        method: "POST",
        body: {
          email: e
        },
        errorMessage: "Error searching for user ".concat(e)
      });
    }
  }, {
    key: "searchOrganization",
    value: function searchOrganization(e) {
      return this._networkClient.fetchSDK({
        url: "/b2b/organizations/search",
        method: "POST",
        body: {
          organization_slug: e
        },
        errorMessage: "Error searching slug"
      });
    }
  }, {
    key: "searchMember",
    value: function searchMember(e, t) {
      return this._networkClient.fetchSDK({
        url: "/b2b/organizations/members/search",
        method: "POST",
        body: {
          email_address: e,
          organization_id: t
        },
        errorMessage: "Error searching for member ".concat(e)
      });
    }
  }]);
  return je;
}();
var Fe = function Fe(e) {
  return (document.cookie ? document.cookie.split("; ") : []).filter(function (t) {
    var _t$split = t.split("="),
      _t$split2 = _slicedToArray(_t$split, 1),
      r = _t$split2[0];
    return e === r;
  }).length > 1;
};
/*! js-cookie v3.0.1 | MIT */
function Ke(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t];
    for (var n in r) e[n] = r[n];
  }
  return e;
}
var Ue = function e(t, r) {
  function n(e, n, i) {
    if ("undefined" != typeof document) {
      "number" == typeof (i = Ke({}, r, i)).expires && (i.expires = new Date(Date.now() + 864e5 * i.expires)), i.expires && (i.expires = i.expires.toUTCString()), e = encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
      var o = "";
      for (var s in i) i[s] && (o += "; " + s, !0 !== i[s] && (o += "=" + i[s].split(";")[0]));
      return document.cookie = e + "=" + t.write(n, e) + o;
    }
  }
  return Object.create({
    set: n,
    get: function get(e) {
      if ("undefined" != typeof document && (!arguments.length || e)) {
        for (var r = document.cookie ? document.cookie.split("; ") : [], n = {}, i = 0; i < r.length; i++) {
          var o = r[i].split("="),
            s = o.slice(1).join("=");
          try {
            var a = decodeURIComponent(o[0]);
            if (n[a] = t.read(s, a), e === a) break;
          } catch (e) {}
        }
        return e ? n[e] : n;
      }
    },
    remove: function remove(e, t) {
      n(e, "", Ke({}, t, {
        expires: -1
      }));
    },
    withAttributes: function withAttributes(t) {
      return e(this.converter, Ke({}, this.attributes, t));
    },
    withConverter: function withConverter(t) {
      return e(Ke({}, this.converter, t), this.attributes);
    }
  }, {
    attributes: {
      value: Object.freeze(r)
    },
    converter: {
      value: Object.freeze(t)
    }
  });
}({
  read: function read(e) {
    return '"' === e[0] && (e = e.slice(1, -1)), e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
  },
  write: function write(e) {
    return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
  }
}, {
  path: "/"
});
var ze = function ze(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  return "stytch_sdk_state_".concat(e).concat(t ? "::".concat(t) : "");
};
var We = /*#__PURE__*/function () {
  function We(e, t) {
    var _this4 = this;
    _classCallCheck(this, We);
    this.browserSessionStorage = {
      getItem: function getItem(e) {
        return sessionStorage.getItem(ze(_this4.publicToken, e));
      },
      setItem: function setItem(e, t) {
        return sessionStorage.setItem(ze(_this4.publicToken, e), t);
      },
      removeItem: function removeItem(e) {
        return sessionStorage.removeItem(ze(_this4.publicToken, e));
      }
    }, this.publicToken = e, this.state = null, this.subscriptions = {}, (null == t ? void 0 : t.cookieOptions) ? (Q("SubscriptionDataLayer").isOptionalString("cookieOptions.opaqueTokenCookieName", t.cookieOptions.opaqueTokenCookieName).isOptionalString("cookieOptions.jwtCookieName", t.cookieOptions.jwtCookieName).isOptionalString("cookieOptions.istCookieName", t.cookieOptions.istCookieName).isOptionalString("cookieOptions.path", t.cookieOptions.path).isOptionalString("cookieOptions.domain", t.cookieOptions.domain), this._jwtCookieName = t.cookieOptions.jwtCookieName || null, this._opaqueTokenCookieName = t.cookieOptions.opaqueTokenCookieName || null, this._cookiePath = t.cookieOptions.path || null, this._domain = t.cookieOptions.domain || null, this._cookieAvailableToSubdomains = t.cookieOptions.availableToSubdomains || !1, this._istCookieName = t.cookieOptions.istCookieName || null) : (this._opaqueTokenCookieName = null, this._jwtCookieName = null, this._cookiePath = null, this._domain = null, this._cookieAvailableToSubdomains = !1, this._istCookieName = null);
    var r = localStorage.getItem(ze(this.publicToken));
    if (!r) return;
    var n;
    try {
      n = JSON.parse(r);
    } catch (e) {
      return void this.syncToLocalStorage();
    }
    this.state = n;
  }
  _createClass(We, [{
    key: "opaqueTokenCookieName",
    get: function get() {
      var e;
      return null !== (e = this._opaqueTokenCookieName) && void 0 !== e ? e : "stytch_session";
    }
  }, {
    key: "jwtCookieName",
    get: function get() {
      var e;
      return null !== (e = this._jwtCookieName) && void 0 !== e ? e : "stytch_session_jwt";
    }
  }, {
    key: "istCookieName",
    get: function get() {
      var e;
      return null !== (e = this._istCookieName) && void 0 !== e ? e : "stytch_intermediate_session_token";
    }
  }, {
    key: "readSessionCookie",
    value: function readSessionCookie() {
      return {
        session_token: Ue.get(this.opaqueTokenCookieName),
        session_jwt: Ue.get(this.jwtCookieName)
      };
    }
  }, {
    key: "readIntermediateSessionTokenCookie",
    value: function readIntermediateSessionTokenCookie() {
      return Ue.get(this.istCookieName);
    }
  }, {
    key: "writeSessionCookie",
    value: function writeSessionCookie(e) {
      var t, r, n, i;
      var o = e.state,
        s = e.session_token,
        a = e.session_jwt,
        c = We.generateCookieOpts({
          expiresAt: null !== (r = null === (t = null == o ? void 0 : o.session) || void 0 === t ? void 0 : t.expires_at) && void 0 !== r ? r : "",
          availableToSubdomains: this._cookieAvailableToSubdomains,
          path: this._cookiePath,
          domain: this._domain
        });
      Ue.set(this.opaqueTokenCookieName, s, c), Ue.set(this.jwtCookieName, a, c);
      var u = We.generateCookieOpts({
        expiresAt: null !== (i = null === (n = null == o ? void 0 : o.session) || void 0 === n ? void 0 : n.expires_at) && void 0 !== i ? i : "",
        availableToSubdomains: !this._cookieAvailableToSubdomains,
        path: this._cookiePath,
        domain: this._domain
      });
      Fe(this.jwtCookieName) && Ue.remove(this.jwtCookieName, u), Fe(this.opaqueTokenCookieName) && Ue.remove(this.opaqueTokenCookieName, u), Fe(this.jwtCookieName) && J("Could not remove extraneous JWT cookie. This might happen if the cookie has been set using multiple `path` settings, and may produce unwanted behavior."), Fe(this.opaqueTokenCookieName) && J("Could not remove extraneous opaque token cookie.");
    }
  }, {
    key: "writeIntermediateSessionTokenCookie",
    value: function writeIntermediateSessionTokenCookie(e) {
      var t = new Date(Date.now() + 6e5),
        r = We.generateCookieOpts({
          expiresAt: t.toString(),
          availableToSubdomains: this._cookieAvailableToSubdomains,
          path: this._cookiePath,
          domain: this._domain
        });
      Ue.set(this.istCookieName, e, r);
    }
  }, {
    key: "removeSessionCookie",
    value: function removeSessionCookie() {
      this.removeCookies([this.opaqueTokenCookieName, this.jwtCookieName]);
    }
  }, {
    key: "removeISTCookie",
    value: function removeISTCookie() {
      this.removeCookies([this.istCookieName]);
    }
  }, {
    key: "removeCookies",
    value: function removeCookies(e) {
      var _this5 = this;
      [!0, !1].forEach(function (t) {
        [_this5._cookiePath, null].forEach(function (r) {
          [_this5._domain, null].forEach(function (n) {
            var i = We.generateCookieOpts({
              expiresAt: new Date(0).toString(),
              availableToSubdomains: t,
              path: r,
              domain: n
            });
            e.forEach(function (e) {
              Ue.remove(e, i);
            });
          });
        });
      });
    }
  }, {
    key: "syncToLocalStorage",
    value: function syncToLocalStorage() {
      localStorage.setItem(ze(this.publicToken), JSON.stringify(this.state));
    }
  }, {
    key: "getItem",
    value: function getItem(e) {
      return localStorage.getItem(ze(this.publicToken, e));
    }
  }, {
    key: "setItem",
    value: function setItem(e, t) {
      return localStorage.setItem(ze(this.publicToken, e), t);
    }
  }, {
    key: "removeItem",
    value: function removeItem(e) {
      return localStorage.removeItem(ze(this.publicToken, e));
    }
  }], [{
    key: "generateCookieOpts",
    value: function generateCookieOpts(_ref4) {
      var e = _ref4.path,
        t = _ref4.domain,
        r = _ref4.availableToSubdomains,
        n = _ref4.expiresAt;
      var i = {
        expires: new Date(n),
        sameSite: "lax"
      };
      return e && (i.path = e), Boolean("localhost" === window.location.hostname || "[::1]" === window.location.hostname || window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)) ? i.secure = !1 : (r && (i.domain = t || window.location.host), i.secure = !0), i;
    }
  }]);
  return We;
}();
var He = /*#__PURE__*/function (_We) {
  _inherits(He, _We);
  var _super2 = _createSuper(He);
  function He() {
    _classCallCheck(this, He);
    return _super2.apply(this, arguments);
  }
  return _createClass(He);
}(We);
var Ge = Symbol["for"]("__stytch_b2b_DataLayer"),
  qe = function qe(e, t) {
    var r = function () {
      var e = window;
      return e[Ge] || (e[Ge] = {}), e[Ge];
    }();
    return r[e] || (r[e] = new He(e, t)), r[e];
  },
  Ye = function Ye(e, t) {
    Object.values(e).forEach(function (e) {
      return e(t);
    });
  },
  Ve = function () {
    var t = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).KEYS_TO_EXCLUDE,
      r = void 0 === t ? [] : t;
    return function t(i, o) {
      return n(i) === n(o) && (null === i || null === o ? i === o : "object" === n(i) ? Object.keys(i).length === Object.keys(o).length && !Object.keys(i).some(function (e) {
        return !(e in o);
      }) && Object.entries(i).filter(function (t) {
        var n = e(t, 1)[0];
        return !r.includes(n);
      }).every(function (r) {
        var n = e(r, 2),
          i = n[0],
          s = n[1];
        return t(s, o[i]);
      }) : i === o);
    };
  }({
    KEYS_TO_EXCLUDE: ["last_accessed_at"]
  });
var Je = /*#__PURE__*/function () {
  function Je(e, t) {
    var _this6 = this;
    _classCallCheck(this, Je);
    this._publicToken = e, this._datalayer = t, this._listen = function (e) {
      if (e.key !== ze(_this6._publicToken)) return;
      if (null === e.newValue || "null" === e.newValue) return void _this6.destroyState();
      var t = JSON.parse(e.newValue);
      _this6.updateState(t);
    }, window.addEventListener("storage", this._listen);
    var _this$_datalayer$read = this._datalayer.readSessionCookie(),
      r = _this$_datalayer$read.session_token;
    r || this.destroyState();
  }
  _createClass(Je, [{
    key: "getTokens",
    value: function getTokens() {
      var _this$_datalayer$read2 = this._datalayer.readSessionCookie(),
        e = _this$_datalayer$read2.session_token,
        t = _this$_datalayer$read2.session_jwt;
      return "string" != typeof e || "string" != typeof t ? null : {
        session_token: e,
        session_jwt: t
      };
    }
  }, {
    key: "getIntermediateSessionToken",
    value: function getIntermediateSessionToken() {
      return this._datalayer.readIntermediateSessionTokenCookie() || null;
    }
  }, {
    key: "destroyState",
    value: function destroyState() {
      this.updateStateAndTokens({
        state: null,
        session_token: null,
        session_jwt: null,
        intermediate_session_token: null
      });
    }
  }, {
    key: "_updateStateAndTokensInternal",
    value: function _updateStateAndTokensInternal(e) {
      var t = this._datalayer.state,
        r = null === e.state ? null : Object.assign(Object.assign({}, this._datalayer.state), e.state);
      this._datalayer.state = r, Ve(t, r) || Ye(this._datalayer.subscriptions, r);
    }
  }, {
    key: "updateStateAndTokens",
    value: function updateStateAndTokens(e) {
      e.state ? (this._datalayer.writeSessionCookie(e), this._datalayer.removeISTCookie()) : e.intermediate_session_token ? (this._datalayer.writeIntermediateSessionTokenCookie(e.intermediate_session_token), this._datalayer.removeSessionCookie()) : (this._datalayer.removeSessionCookie(), this._datalayer.removeISTCookie()), this._updateStateAndTokensInternal(e), this._datalayer.syncToLocalStorage();
    }
  }, {
    key: "updateState",
    value: function updateState(e) {
      var t = this._datalayer.state,
        r = null === e ? null : Object.assign(Object.assign({}, this._datalayer.state), e);
      this._datalayer.state = r, Ve(t, r) || (Ye(this._datalayer.subscriptions, r), this._datalayer.syncToLocalStorage());
    }
  }, {
    key: "updateTokens",
    value: function updateTokens(e) {
      var t = e.session_token,
        r = e.session_jwt,
        n = this._datalayer.readSessionCookie(),
        i = Object.assign(Object.assign({}, n), {
          session_token: t,
          session_jwt: r
        });
      t || r ? (this._datalayer.writeSessionCookie(i), this._datalayer.removeISTCookie()) : this._datalayer.removeSessionCookie();
    }
  }, {
    key: "subscribeToState",
    value: function subscribeToState(e) {
      return function (e, t) {
        var r = Math.random().toString(36).slice(-10);
        return e[r] = t, function () {
          return delete e[r];
        };
      }(this._datalayer.subscriptions, e);
    }
  }, {
    key: "getState",
    value: function getState() {
      return this._datalayer.state;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      window.removeEventListener("storage", this._listen);
    }
  }, {
    key: "syncFromDeviceStorage",
    value: function syncFromDeviceStorage() {
      return null;
    }
  }]);
  return Je;
}();
var $e = /*#__PURE__*/function (_Je) {
  _inherits($e, _Je);
  var _super3 = _createSuper($e);
  function $e() {
    var _this7;
    _classCallCheck(this, $e);
    _this7 = _super3.apply(this, arguments), _this7.updateMember = function (e) {
      return _this7.updateState({
        member: e
      });
    }, _this7.getMember = function () {
      var e, t;
      return null !== (t = null === (e = _this7.getState()) || void 0 === e ? void 0 : e.member) && void 0 !== t ? t : null;
    }, _this7.getSession = function () {
      var e, t;
      return null !== (t = null === (e = _this7.getState()) || void 0 === e ? void 0 : e.session) && void 0 !== t ? t : null;
    };
    return _this7;
  }
  return _createClass($e);
}(Je);
var Xe = Symbol["for"]("stytch__internal_b2b");
var Ze = /*#__PURE__*/_createClass(function Ze(e, t) {
  var _this8 = this;
  _classCallCheck(this, Ze);
  var r;
  !function (e) {
    if ("undefined" == typeof window) throw new Error("The ".concat(e, " is not compatible with server-side environments.\nIf using nextjs, use the create").concat(e, " method instead.\n```\n").concat("import { createStytchB2BHeadlessClient } from '@stytch/nextjs/b2b';\n    \n  const stytch = createStytchB2BHeadlessClient('public-token-...');\n  ", "\n```\n"));
  }("StytchB2BHeadlessClient"), "string" != typeof (r = e) ? J("Public token is malformed. Expected a string, got ".concat(n(r), ".").concat(X)) : "" === r ? J('Public token is malformed. Expected "public-token-...", got an empty string.'.concat(X)) : r.startsWith("public-token-") || J('Public token is malformed. Expected "public-token-...", got '.concat(r, ".").concat(X));
  var i = t,
    o = {
      cookieOptions: null == (s = i) ? void 0 : s.cookieOptions,
      endpoints: {
        sdkBackendURL: null !== (c = null === (a = null == s ? void 0 : s.endpoints) || void 0 === a ? void 0 : a.sdkBackendURL) && void 0 !== c ? c : "https://web.stytch.com",
        testAPIURL: null !== (l = null === (u = null == s ? void 0 : s.endpoints) || void 0 === u ? void 0 : u.testAPIURL) && void 0 !== l ? l : "https://test.stytch.com",
        liveAPIURL: null !== (h = null === (d = null == s ? void 0 : s.endpoints) || void 0 === d ? void 0 : d.liveAPIURL) && void 0 !== h ? h : "https://api.stytch.com",
        dfpBackendURL: null !== (_ = null === (p = null == s ? void 0 : s.endpoints) || void 0 === p ? void 0 : p.dfpBackendURL) && void 0 !== _ ? _ : "https://telemetry.stytch.com",
        clientsideServicesIframeURL: null !== (m = null === (f = null == s ? void 0 : s.endpoints) || void 0 === f ? void 0 : f.clientsideServicesIframeURL) && void 0 !== m ? m : "https://js.stytch.com/clientside-services/index.html"
      }
    };
  var s, a, c, u, l, d, h, p, _, f, m;
  this._dataLayer = qe(e, i), this._subscriptionService = new $e(e, this._dataLayer);
  var v = new Ne(this._dataLayer, "passwords");
  this._networkClient = new Le(e, this._dataLayer, o.endpoints.sdkBackendURL, function () {
    var e, t, r, n;
    return {
      stytch_member_id: null === (t = null === (e = _this8._dataLayer.state) || void 0 === e ? void 0 : e.member) || void 0 === t ? void 0 : t.member_id,
      stytch_member_session_id: null === (n = null === (r = _this8._dataLayer.state) || void 0 === r ? void 0 : r.session) || void 0 === n ? void 0 : n.member_session_id
    };
  });
  var b = new De(e, this._networkClient, this._dataLayer),
    g = new Ie(b.getAsync()),
    y = new ee(e, o.endpoints.dfpBackendURL, b.getAsync(), g.executeRecaptcha);
  this.organization = new ae(this._networkClient, this._subscriptionService), this.member = new oe(this._networkClient, this._subscriptionService), this.self = new oe(this._networkClient, this._subscriptionService), this.session = new ue(this._networkClient, this._subscriptionService), this.magicLinks = new ie(this._networkClient, this._subscriptionService, new Ne(this._dataLayer, "magic_links"), v, b.getAsync(), y), this.oauth = new ce(this._networkClient, this._subscriptionService, new Ne(this._dataLayer, "oauth"), b.getAsync(), {
    publicToken: e,
    testAPIURL: o.endpoints.testAPIURL,
    liveAPIURL: o.endpoints.liveAPIURL
  }, y), this.sso = new se(this._networkClient, this._subscriptionService, new Ne(this._dataLayer, "sso"), b.getAsync(), {
    publicToken: e,
    testAPIURL: o.endpoints.testAPIURL,
    liveAPIURL: o.endpoints.liveAPIURL
  }), this.discovery = new le(this._networkClient, this._subscriptionService), this.passwords = new Be(this._networkClient, this._subscriptionService, v, b.getAsync(), y), this.otps = new de(this._networkClient, this._subscriptionService, y), this.rbac = new he(b.getSync(), b.getAsync(), this._subscriptionService), this._sessionManager = new pe(this._subscriptionService, this.session);
  var k = new je(this._networkClient);
  this._dataLayer.readSessionCookie().session_token && this._sessionManager.performBackgroundRefresh(), this._networkClient.logEvent({
    name: "b2b_sdk_instance_instantiated",
    details: {
      event_callback_registered: !1,
      error_callback_registered: !1,
      success_callback_registered: !1
    }
  });
  (function (e, t) {
    Object.assign(e, _defineProperty({}, Xe, t));
  })(this, {
    bootstrap: b,
    publicToken: e,
    searchManager: k,
    dataLayer: this._dataLayer,
    networkClient: this._networkClient
  });
});
function Qe(e) {
  return Qe = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
    return _typeof(e);
  } : function (e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : _typeof(e);
  }, Qe(e);
}
function et(e, t) {
  for (var r = 0; r < t.length; r++) {
    var n = t[r];
    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, (i = n.key, o = void 0, o = function (e, t) {
      if ("object" !== Qe(e) || null === e) return e;
      var r = e[Symbol.toPrimitive];
      if (void 0 !== r) {
        var n = r.call(e, t || "default");
        if ("object" !== Qe(n)) return n;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === t ? String : Number)(e);
    }(i, "string"), "symbol" === Qe(o) ? o : String(o)), n);
  }
  var i, o;
}
function tt(e, t, r) {
  return t && et(e.prototype, t), r && et(e, r), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function rt(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function nt(e, t) {
  if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
  e.prototype = Object.create(t && t.prototype, {
    constructor: {
      value: e,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(e, "prototype", {
    writable: !1
  }), t && ut(e, t);
}
function it(e) {
  var t = ct();
  return function () {
    var r,
      n = lt(e);
    if (t) {
      var i = lt(this).constructor;
      r = Reflect.construct(n, arguments, i);
    } else r = n.apply(this, arguments);
    return function (e, t) {
      if (t && ("object" === Qe(t) || "function" == typeof t)) return t;
      if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
      return ot(e);
    }(this, r);
  };
}
function ot(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function st(e) {
  var t = "function" == typeof Map ? new Map() : void 0;
  return st = function st(e) {
    if (null === e || !function (e) {
      try {
        return -1 !== Function.toString.call(e).indexOf("[native code]");
      } catch (t) {
        return "function" == typeof e;
      }
    }(e)) return e;
    if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== t) {
      if (t.has(e)) return t.get(e);
      t.set(e, r);
    }
    function r() {
      return at(e, arguments, lt(this).constructor);
    }
    return r.prototype = Object.create(e.prototype, {
      constructor: {
        value: r,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), ut(r, e);
  }, st(e);
}
function at(e, t, r) {
  return at = ct() ? Reflect.construct.bind() : function (e, t, r) {
    var n = [null];
    n.push.apply(n, t);
    var i = new (Function.bind.apply(e, n))();
    return r && ut(i, r.prototype), i;
  }, at.apply(null, arguments);
}
function ct() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
  } catch (e) {
    return !1;
  }
}
function ut(e, t) {
  return ut = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) {
    return e.__proto__ = t, e;
  }, ut(e, t);
}
function lt(e) {
  return lt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) {
    return e.__proto__ || Object.getPrototypeOf(e);
  }, lt(e);
}
var dt, ht, pt, _t, ft, mt;
!function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.oauth = "oauth", e.otp = "otp", e.crypto = "crypto", e.passwords = "passwords", e.passkeys = "passkeys";
}(dt || (dt = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft", e.Apple = "apple", e.Github = "github", e.GitLab = "gitlab", e.Facebook = "facebook", e.Discord = "discord", e.Salesforce = "salesforce", e.Slack = "slack", e.Amazon = "amazon", e.Bitbucket = "bitbucket", e.LinkedIn = "linkedin", e.Coinbase = "coinbase", e.Twitch = "twitch", e.Twitter = "twitter", e.TikTok = "tiktok", e.Snapchat = "snapchat", e.Figma = "figma", e.Yahoo = "yahoo";
}(ht || (ht = {})), function (e) {
  e.Vessel = "Vessel", e.Phantom = "Phantom", e.Metamask = "Metamask", e.Coinbase = "Coinbase", e.Binance = "Binance", e.GenericEthereumWallet = "Other Ethereum Wallet", e.GenericSolanaWallet = "Other Solana Wallet";
}(pt || (pt = {})), function (e) {
  e.embedded = "embedded", e.floating = "floating";
}(_t || (_t = {})), function (e) {
  e.SMS = "sms", e.WhatsApp = "whatsapp", e.Email = "email";
}(ft || (ft = {})), function (e) {
  e.MagicLinkLoginOrCreateEvent = "MAGIC_LINK_LOGIN_OR_CREATE", e.OTPsLoginOrCreateEvent = "OTP_LOGIN_OR_CREATE", e.OTPsAuthenticate = "OTP_AUTHENTICATE", e.CryptoWalletAuthenticateStart = "CRYPTO_WALLET_AUTHENTICATE_START", e.CryptoWalletAuthenticate = "CRYPTO_WALLET_AUTHENTICATE", e.PasswordCreate = "PASSWORD_CREATE", e.PasswordAuthenticate = "PASSWORD_AUTHENTICATE", e.PasswordResetByEmailStart = "PASSWORD_RESET_BY_EMAIL_START", e.PasswordResetByEmail = "PASSWORD_RESET_BY_EMAIL", e.PasskeyRegister = "PASSKEY_REGISTER", e.PasskeyAuthenticate = "PASSKEY_AUTHENTICATE", e.PasskeySkip = "PASSKEY_SKIP", e.PasskeyDone = "PASSKEY_DONE", e.B2BMagicLinkEmailLoginOrSignup = "B2B_MAGIC_LINK_EMAIL_LOGIN_OR_SIGNUP", e.B2BMagicLinkAuthenticate = "B2B_MAGIC_LINK_AUTHENTICATE", e.B2BMagicLinkEmailDiscoverySend = "B2B_MAGIC_LINK_EMAIL_DISCOVERY_SEND", e.B2BMagicLinkDiscoveryAuthenticate = "B2B_MAGIC_LINK_DISCOVERY_AUTHENTICATE", e.B2BSSOStart = "B2B_SSO_START", e.B2BSSOAuthenticate = "B2B_SSO_AUTHENTICATE", e.B2BOAuthAuthenticate = "B2B_OAUTH_AUTHENTICATE", e.B2BOAuthDiscoveryAuthenticate = "B2B_OAUTH_DISCOVERY_AUTHENTICATE", e.B2BDiscoveryOrganizationsCreate = "B2B_DISCOVERY_ORGANIZATIONS_CREATE", e.B2BDiscoveryIntermediateSessionExchange = "B2B_DISCOVERY_INTERMEDIATE_SESSION_EXCHANGE", e.B2BPasswordAuthenticate = "B2B_PASSWORD_AUTHENTICATE", e.B2BPasswordResetByEmailStart = "B2B_PASSWORD_RESET_BY_EMAIL_START", e.B2BPasswordResetByEmail = "B2B_PASSWORD_RESET_BY_EMAIL", e.B2BPasswordResetBySession = "B2B_PASSWORD_RESET_BY_SESSION";
}(mt || (mt = {}));
var vt,
  bt,
  gt,
  yt,
  kt = function (e) {
    nt(r, st(Error));
    var t = it(r);
    function r(e, n) {
      var i;
      return rt(this, r), (i = t.call(this, e + "\n" + n)).message = e + "\n" + n, i.name = "SDKAPIUnreachableError", i.details = n, Object.setPrototypeOf(ot(i), r.prototype), i;
    }
    return tt(r);
  }(),
  St = function (e) {
    nt(r, st(Error));
    var t = it(r);
    function r(e, n) {
      var i;
      return rt(this, r), (i = t.call(this)).name = "StytchSDKUsageError", i.message = "Invalid call to ".concat(e, "\n") + n, i;
    }
    return tt(r);
  }(),
  wt = function (e) {
    nt(r, st(Error));
    var t = it(r);
    function r(e) {
      var n, i;
      rt(this, r), (n = t.call(this)).name = "StytchSDKSchemaError";
      var o = null === (i = e.body) || void 0 === i ? void 0 : i.map(function (e) {
        return "".concat(e.dataPath, ": ").concat(e.message);
      }).join("\n");
      return n.message = "[400] Request does not match expected schema\n".concat(o), n;
    }
    return tt(r);
  }(),
  At = function (e) {
    nt(r, st(Error));
    var t = it(r);
    function r(e) {
      var n;
      rt(this, r), (n = t.call(this)).name = "StytchSDKAPIError";
      var i = e.status_code,
        o = e.error_type,
        s = e.error_message,
        a = e.error_url,
        c = e.request_id;
      return n.error_type = o, n.error_message = s, n.error_url = a, n.request_id = c, n.status_code = i, n.message = "[".concat(i, "] ").concat(o, "\n") + "".concat(s, "\n") + "See ".concat(a, " for more information.\n") + (c ? "request_id: ".concat(c, "\n") : ""), n;
    }
    return tt(r);
  }(),
  Et = function (e) {
    nt(r, st(Error));
    var t = it(r);
    function r(e) {
      var n;
      return rt(this, r), (n = t.call(this)).name = "StytchSDKNativeError", n.error_type = e, n.message = "".concat(e), n;
    }
    return tt(r);
  }(),
  Tt = ["unauthorized_credentials", "user_unauthenticated", "invalid_secret_authentication", "session_not_found"];
!function (e) {
  e.BiometricsSensorError = "biometrics_sensor_error", e.DeviceCredentialsNotAllowed = "device_credentials_not_allowed", e.DeviceHardwareError = "device_hardware_error", e.InternalError = "internal_error", e.KeyInvalidated = "key_invalidated", e.KeystoreUnavailable = "keystore_unavailable", e.NoBiometricsEnrolled = "no_biometrics_enrolled", e.NoBiometricsRegistration = "no_biometrics_registration", e.SessionExpired = "session_expired", e.UserCancellation = "user_cancellation", e.UserLockedOut = "user_locked_out", e.BiometricsNotAvailable = "biometrics_not_available";
}(vt || (vt = {})), function (e) {
  e.emailMagicLinks = "emailMagicLinks", e.sso = "sso", e.passwords = "passwords", e.oauth = "oauth";
}(bt || (bt = {})), function (e) {
  e.Discovery = "Discovery", e.Organization = "Organization", e.PasswordReset = "PasswordReset";
}(gt || (gt = {})), function (e) {
  e.Google = "google", e.Microsoft = "microsoft";
}(yt || (yt = {}));
export { gt as AuthFlowType, yt as B2BOAuthProviders, bt as B2BProducts, vt as BiometricsErrors, ht as OAuthProviders, ft as OTPMethods, _t as OneTapPositions, dt as Products, kt as SDKAPIUnreachableError, Ze as StytchB2BHeadlessClient, mt as StytchEventType, At as StytchSDKAPIError, Et as StytchSDKNativeError, wt as StytchSDKSchemaError, St as StytchSDKUsageError, Tt as UNRECOVERABLE_ERROR_TYPES, pt as Wallets };
