"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parsePkpSignResponse = exports.cleanStringValues = exports.convertKeysToCamelCase = exports.snakeToCamel = void 0;
/**
 * Converts a snake_case string to camelCase.
 * @param s The snake_case string to convert.
 * @returns The camelCase version of the input string.
 *
 * @example
 * snakeToCamel('hello_world') // 'helloWorld'
 */
const snakeToCamel = (s) => s.replace(/(_\w)/g, (m) => m[1].toUpperCase());
exports.snakeToCamel = snakeToCamel;
/**
 * Converts the keys of an object from snake_case to camelCase.
 *
 * @param obj - The object whose keys need to be converted.
 * @returns The object with keys converted to camelCase.
 */
const convertKeysToCamelCase = (obj) => Object.keys(obj).reduce((acc, key) => ({
    ...acc,
    [(0, exports.snakeToCamel)(key)]: obj[key],
}), {});
exports.convertKeysToCamelCase = convertKeysToCamelCase;
/**
 * Removes double quotes from string values in an object.
 * @param obj - The object to clean string values from.
 * @returns A new object with string values cleaned.
 */
const cleanStringValues = (obj) => Object.keys(obj).reduce((acc, key) => ({
    ...acc,
    [key]: typeof obj[key] === 'string' ? obj[key].replace(/"/g, '') : obj[key],
}), {});
exports.cleanStringValues = cleanStringValues;
/**
 * Parses the PKP sign response data and transforms it into a standardised format.
 * @param responseData - The response data containing PKP sign shares.
 * @returns An array of objects with the signature data.
 */
const parsePkpSignResponse = (responseData) => responseData.map(({ signatureShare }) => {
    // Remove 'result' key if it exists
    delete signatureShare.result;
    const camelCaseShare = (0, exports.convertKeysToCamelCase)(signatureShare);
    const cleanedShare = (0, exports.cleanStringValues)(camelCaseShare);
    // Change 'dataSigned' from 'digest'
    if (cleanedShare.digest) {
        cleanedShare.dataSigned = cleanedShare.digest;
    }
    return { signature: cleanedShare };
});
exports.parsePkpSignResponse = parsePkpSignResponse;
//# sourceMappingURL=parse-pkp-sign-response.js.map