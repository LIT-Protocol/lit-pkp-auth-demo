import { PKPSignShare, PkpSignedData } from '@lit-protocol/types';
/**
 * Converts a snake_case string to camelCase.
 * @param s The snake_case string to convert.
 * @returns The camelCase version of the input string.
 *
 * @example
 * snakeToCamel('hello_world') // 'helloWorld'
 */
export declare const snakeToCamel: (s: string) => string;
/**
 * Converts the keys of an object from snake_case to camelCase.
 *
 * @param obj - The object whose keys need to be converted.
 * @returns The object with keys converted to camelCase.
 */
export declare const convertKeysToCamelCase: (obj: {
    [key: string]: any;
}) => any;
/**
 * Removes double quotes from string values in an object.
 * @param obj - The object to clean string values from.
 * @returns A new object with string values cleaned.
 */
export declare const cleanStringValues: (obj: {
    [key: string]: any;
}) => any;
/**
 * Parses the PKP sign response data and transforms it into a standardised format.
 * @param responseData - The response data containing PKP sign shares.
 * @returns An array of objects with the signature data.
 */
export declare const parsePkpSignResponse: (responseData: PKPSignShare[]) => {
    signature: PkpSignedData;
}[];
