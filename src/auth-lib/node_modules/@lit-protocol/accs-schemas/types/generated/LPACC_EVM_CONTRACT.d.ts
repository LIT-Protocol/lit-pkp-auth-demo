/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export interface LPACC_EVM_CONTRACT {
    conditionType?: string;
    contractAddress: string;
    chain: 'ethereum' | 'polygon' | 'fantom' | 'xdai' | 'bsc' | 'arbitrum' | 'avalanche' | 'fuji' | 'harmony' | 'mumbai' | 'goerli' | 'cronos' | 'optimism' | 'celo' | 'aurora' | 'eluvio' | 'alfajores' | 'xdc' | 'evmos' | 'evmosTestnet' | 'bscTestnet' | 'baseGoerli' | 'baseSepolia' | 'moonbeam' | 'moonriver' | 'moonbaseAlpha' | 'filecoin' | 'hyperspace' | 'sepolia' | 'scrollAlphaTestnet' | 'scroll' | 'zksync' | 'base' | 'lukso' | 'luksoTestnet' | 'zora' | 'zoraGoerli' | 'zksyncTestnet' | 'lineaGoerli' | 'chronicleTestnet' | 'chiado' | 'zkEvm' | 'mantleTestnet' | 'mantle' | 'klaytn' | 'publicGoodsNetwork' | 'optimismGoerli' | 'waevEclipseTestnet' | 'waevEclipseDevnet';
    functionName: string;
    functionParams: string[];
    functionAbi: {
        name: string;
        type?: string;
        stateMutability: string;
        constant?: boolean;
        inputs: {
            name: string;
            type: string;
            internalType?: string;
        }[];
        outputs: {
            name: string;
            type: string;
            internalType?: string;
        }[];
    };
    returnValueTest: {
        key: string;
        comparator: 'contains' | '=' | '>' | '>=' | '<' | '<=';
        value: string;
    };
}
