"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LitResourcePrefix = exports.LitAbility = void 0;
/**
 * These are the user-facing abilities that can be granted to a session.
 */
var LitAbility;
(function (LitAbility) {
    /**
     * This is the ability to process an encryption access control condition.
     * The resource will specify the corresponding hashed key value of the
     * access control condition.
     */
    LitAbility["AccessControlConditionDecryption"] = "access-control-condition-decryption";
    /**
     * This is the ability to process a signing access control condition.
     * The resource will specify the corresponding hashed key value of the
     * access control condition.
     */
    LitAbility["AccessControlConditionSigning"] = "access-control-condition-signing";
    /**
     * This is the ability to use a PKP for signing purposes. The resource will specify
     * the corresponding PKP token ID.
     */
    LitAbility["PKPSigning"] = "pkp-signing";
    /**
     * This is the ability to use a Rate Limit Increase (Capacity Credits NFT) token during
     * authentication with the nodes. The resource will specify the corresponding
     * Capacity Credits NFT token ID.
     */
    LitAbility["RateLimitIncreaseAuth"] = "rate-limit-increase-auth";
    /**
     * This is the ability to execute a Lit Action. The resource will specify the
     * corresponding Lit Action IPFS CID.
     */
    LitAbility["LitActionExecution"] = "lit-action-execution";
})(LitAbility = exports.LitAbility || (exports.LitAbility = {}));
/**
 * Prefixes used for identifying various LIT resources.
 *
 * @description These resource prefixes are also used as valid IRI schemes.
 */
var LitResourcePrefix;
(function (LitResourcePrefix) {
    LitResourcePrefix["AccessControlCondition"] = "lit-accesscontrolcondition";
    LitResourcePrefix["PKP"] = "lit-pkp";
    LitResourcePrefix["RLI"] = "lit-ratelimitincrease";
    LitResourcePrefix["LitAction"] = "lit-litaction";
})(LitResourcePrefix = exports.LitResourcePrefix || (exports.LitResourcePrefix = {}));
//# sourceMappingURL=models.js.map