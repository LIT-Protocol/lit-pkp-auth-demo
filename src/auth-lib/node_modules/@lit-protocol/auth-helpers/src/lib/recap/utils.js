"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LitNamespace = exports.LitRecapAbility = exports.getRecapNamespaceAndAbility = void 0;
const models_1 = require("../models");
/**
 * Map from a LitAbility to the Recap namespace and ability.
 * @throws Error if the LitAbility is unknown
 */
function getRecapNamespaceAndAbility(litAbility) {
    switch (litAbility) {
        case models_1.LitAbility.AccessControlConditionDecryption:
            return {
                recapNamespace: LitNamespace.Threshold,
                recapAbility: LitRecapAbility.Decryption,
            };
        case models_1.LitAbility.AccessControlConditionSigning:
            return {
                recapNamespace: LitNamespace.Threshold,
                recapAbility: LitRecapAbility.Signing,
            };
        case models_1.LitAbility.PKPSigning:
            return {
                recapNamespace: LitNamespace.Threshold,
                recapAbility: LitRecapAbility.Signing,
            };
        case models_1.LitAbility.RateLimitIncreaseAuth:
            return {
                recapNamespace: LitNamespace.Auth,
                recapAbility: LitRecapAbility.Auth,
            };
        case models_1.LitAbility.LitActionExecution:
            return {
                recapNamespace: LitNamespace.Threshold,
                recapAbility: LitRecapAbility.Execution,
            };
        default:
            throw new Error(`Unknown LitAbility: ${litAbility}`);
    }
}
exports.getRecapNamespaceAndAbility = getRecapNamespaceAndAbility;
/**
 * LIT specific abilities mapped into the Recap specific terminology
 * of an 'ability'.
 */
var LitRecapAbility;
(function (LitRecapAbility) {
    LitRecapAbility["Decryption"] = "Decryption";
    LitRecapAbility["Signing"] = "Signing";
    LitRecapAbility["Auth"] = "Auth";
    LitRecapAbility["Execution"] = "Execution";
})(LitRecapAbility = exports.LitRecapAbility || (exports.LitRecapAbility = {}));
var LitNamespace;
(function (LitNamespace) {
    LitNamespace["Auth"] = "Auth";
    LitNamespace["Threshold"] = "Threshold";
})(LitNamespace = exports.LitNamespace || (exports.LitNamespace = {}));
//# sourceMappingURL=utils.js.map