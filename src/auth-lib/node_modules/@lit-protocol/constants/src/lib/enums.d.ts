/** ---------- Chains ---------- */
export declare enum VMTYPE {
    EVM = "EVM",
    SVM = "SVM",
    CVM = "CVM"
}
export declare enum SIGTYPE {
    BLS = "BLS",
    EcdsaK256 = "K256",
    EcdsaCaitSith = "ECDSA_CAIT_SITH",
    EcdsaCAITSITHP256 = "EcdsaCaitSithP256"
}
/**
 * The only either possible error types
 */
export declare const enum EITHER_TYPE {
    ERROR = "ERROR",
    SUCCESS = "SUCCESS"
}
/**
 * Supported PKP auth method types
 */
export declare enum AuthMethodType {
    EthWallet = 1,
    LitAction = 2,
    WebAuthn = 3,
    Discord = 4,
    Google = 5,
    GoogleJwt = 6,
    AppleJwt = 8,
    StytchOtp = 9,
    StytchEmailFactorOtp = 10,
    StytchSmsFactorOtp = 11,
    StytchWhatsAppFactorOtp = 12,
    StytchTotpFactorOtp = 13
}
export declare enum StakingStates {
    Active = 0,
    NextValidatorSetLocked = 1,
    ReadyForNextEpoch = 2,
    Unlocked = 3,
    Paused = 4,
    Restore = 5
}
export declare enum AuthMethodScope {
    NoPermissions = 0,
    SignAnything = 1,
    PersonalSign = 2
}
export declare enum LitNetwork {
    Cayenne = "cayenne",
    Manzano = "manzano",
    Habanero = "habanero",
    Custom = "custom"
}
/**
 * Supported provider types
 */
export declare enum ProviderType {
    Discord = "discord",
    Google = "google",
    EthWallet = "ethwallet",
    WebAuthn = "webauthn",
    Apple = "apple",
    StytchOtp = "stytchOtp",
    StytchEmailFactorOtp = "stytchEmailFactorOtp",
    StytchSmsFactorOtp = "stytchSmsFactorOtp",
    StytchWhatsAppFactorOtp = "stytchWhatsAppFactorOtp",
    StytchTotpFactor = "stytchTotpFactor"
}
