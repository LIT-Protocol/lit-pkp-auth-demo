export declare enum LitErrorKind {
    Unknown = "Unknown",
    Unexpected = "Unexpected",
    Generic = "Generic",
    Config = "Config",
    Validation = "Validation",
    Conversion = "Conversion",
    Parser = "Parser",
    Serializer = "Serializer",
    Timeout = "Timeout"
}
export declare const LIT_ERROR: {
    INVALID_PARAM_TYPE: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_ACCESS_CONTROL_CONDITIONS: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    WRONG_NETWORK_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    MINTING_NOT_SUPPORTED: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNSUPPORTED_CHAIN_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_UNIFIED_CONDITION_TYPE: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    LIT_NODE_CLIENT_NOT_READY_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNAUTHROZIED_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_ARGUMENT_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_BOOLEAN_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNKNOWN_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    NO_WALLET_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    WRONG_PARAM_FORMAT: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    LOCAL_STORAGE_ITEM_NOT_FOUND_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    LOCAL_STORAGE_ITEM_NOT_SET_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    LOCAL_STORAGE_ITEM_NOT_REMOVED_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    REMOVED_FUNCTION_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    LIT_NODE_CLIENT_BAD_CONFIG_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    PARAMS_MISSING_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNKNOWN_SIGNATURE_TYPE: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNKNOWN_SIGNATURE_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    SIGNATURE_VALIDATION_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    PARAM_NULL_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    UNKNOWN_DECRYPTION_ALGORITHM_TYPE_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    WASM_INIT_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    NODEJS_EXCEPTION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    WALLET_SIGNATURE_NOT_FOUND_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    NO_VALID_SHARES: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_NODE_ATTESTATION: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INVALID_ETH_BLOCKHASH: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
    INIT_ERROR: {
        name: string;
        code: string;
        kind: LitErrorKind;
    };
};
export declare const LIT_ERROR_CODE: {
    NODE_NOT_AUTHORIZED: string;
};
